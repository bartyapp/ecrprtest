{"version":3,"sources":["common/style.js","screens/ReportsScreen/index.js","utils/aws/s3/create.js","utils/aws/s3/remove.js","utils/aws/index.js","utils/aws/s3/index.js","request.js","screens/ReporterScreen/index.js","screens/TestAmplifyScreen/index.js","assets/svg/cross-with-border.svg","assets/svg/tick-with-border.svg","assets/svg/border.svg","assets/svg/logo1.svg","screens/ShowReportScreen/index.js","navigation/index.js","aws-exports.js","App.js","reportWebVitals.js","index.js"],"names":["crushed","broken","cracked","crushedAndBroken","crushedAndCracked","brokenAndCracked","crushedBrokenAndCracked","ReportsScreen","props","state","localStorageKeys","localStorageData","newReportID","randomStringGenerator","this","localStorageHandlerForState","length","chars","result","i","charAt","Math","floor","random","nums","items","localStorage","allDataKeysSaved","Object","keys","filter","key","includes","finalData","reverse","forEach","item","index","JSON","parse","setState","role","target","href","style","width","textAlign","height","margin","marginBottom","display","alignItems","justifyContent","fontSize","fontFamily","backgroundColor","globalStyles","color","textDecoration","class","marginTop","onClick","removeItem","position","right","top","outline","border","borderRadius","zIndex","cursor","padding","completed","_id","replace","general","model","brand","moment","startDate","format","minHeight","startANewReport","map","renderReports","Component","withRouter","makeUID","uuidv4","uploadFile","file","cb","storageResult","options","level","type","console","log","typeArr","name","split","Promise","resolve","reject","a","fileKey","Storage","put","removeFile","remove","s3","uploads","request","axios","create","baseURL","withCredentials","headers","ReporterScreen","randomIds","push","randomIdGenerator","cosmeticTypesColors","cosmeticTypes","cosmeticTypesNums","numsCosmeticTypes","cosmeticLayerTypes","front","back","left","bottom","functionalityFormData","title","stateId","isFirst","stateInitial","multipleSelectionMode","multipleCheckSum","multiple","code","oneCellModalSelectValue","oneCellModalTextValue","oneCellModalDeletedImages","oneCellModalImages","oneCellModalImagesLength","multipleCellModalSelectValue","multipleCellModalTextValue","multipleCellModalImages","multipleCellModalDeletedImages","multipleCellModalImagesLength","updateCellsModalId","updateCellsModalSelectValue","updateCellsModalOldSelectValue","updateCellsModalTextValue","updateCellsModalImages","updateCellsModalImagesLength","updateCellsModalDataIndex","updateCellsModalDeletedImages","updateCellsModalCodes","email","telephone","Date","bill","box","guarentee","legal","source","date","brandModel","cosmetics","cosmeticsNotes","functionality","modalImageSrc","onSelectChangeOneCellModal","e","value","closeWithoutSaveOneCellModal","_oneCellModalFileInput","closeAndSaveOneCellModal","problemType","mergeCosmetics","problem","problemTypes","images","id","sort","codes","_oneCellModalTextArea","defaultValue","saveLatestStateToLocalStorage","fileUploadHandlerOneCellModal","files","context","call","aws","then","fileResult","concat","catch","err","error","oneCellDeleteImage","Array","from","deletedImage","splice","arr","onSelectChangeMultipleCellModal","closeWithoutSaveMultipleCellModal","multipleCellDeleteImage","multipleResetData","_multipleCellModalFileInput","closeAndSaveMultipleCellModal","obj","_multipleCellModalSelect","_multipleCellModalTextArea","fileUploadHandlerMultipleCellModal","onSelectChangeUpdateCellsModal","closeWithoutSaveUpdateCellsModal","_updateCellsModalFileInput","_updateCellsModalTextArea","closeAndSaveUpdateCellsModal","res","oldProblemType","assign","found","valueOf","p","c","_updateCellsModalSelect","updateCosmeticsFromCosmeticNotes","fileUploadHandlerUpdateCellsModal","updateCellsDeleteImage","getItem","match","params","toggleMultipleSelectionMode","bind","window","removeEventListener","documentListeners","firstElement","slice","addEventListener","document","event","metaKey","removeDatasFromRadioButtons","_generalBrand","_generalModel","_generalGuarantee","_email","_telephone","_legalState","_legalSource","_legalDate","_legalInformation","setItem","stringify","first","second","firstNum","secondNum","total","toString","initialData","currentData","_","isEqual","bool","multipleSelectionHasData","_multipleModalOpener","click","flex","callback","marginRight","marginLeft","renderCleanThePartButton","whiteSpace","overflowX","overflowY","minWidth","textAlignVertical","background","fontWeight","ref","modalOpener","_oneCellModalOpener","selected","src","loading","objectFit","alt","resizeMethod","borderColor","verticalAlign","tabindex","renderOneCellModalOpener","for","onChange","renderOptionsOneCellModal","rows","placeholder","textArea","onKeyUp","maxHeight","renderOneCellImagesContainer","fileInput","accept","disabled","renderCompleteButtonContentOneCell","find","element","renderMultipleCellModalOpener","join","select","onLoad","renderOptionsMultipleCellModal","renderMultipleCellImagesContainer","renderCompleteButtonContentMultipleCell","_updateCellsModalOpener","renderUpdateCellsModalOpener","defaultChecked","textarea","renderUpdateCellsImagesContainer","renderCompleteButtonContentUpdateCells","undefined","paddingTop","paddingBottom","borderBottom","findIndex","currentElement","data","problemIndex","indexOf","_imageModalOpener","maxWidth","gridTemplateColumns","renderCoordinates","parseInt","renderCosmeticNotes","cleanState","positive","_positiveInputGeneral","checked","negative","_negativeInputGeneral","onBlur","renderGeneralRadioButtons","letterSpacing","borderTop","pading","flexDirection","_positiveInput","checkbox","_negativeInput","undef","_undefinedInput","note","cols","information","functionlityObj","legality","cosmeticsAll","post","location","className","createReport","renderHeader","renderSmallHeader","renderGeneralInformationCollector","renderLegalInformationCollector","renderPalette","cleanCosmeticsTypeData","renderFrontCoordinatePicker","renderBackCoordinatePicker","renderTopCoordinatePicker","renderBottomCoordinatePicker","renderLeftCoordinatePicker","renderRightCoordinatePicker","renderFunctionalitySelectBoxRow","renderCreateReport","renderOneCellModal","renderMultipleCellModal","renderCleanActionButton","renderModalImageButton","renderModalImage","renderUpdateCellsModal","TestAmplifyScreen","useState","setFile","uploaded","setUploaded","uploadedPhoto","setUploadedPhoto","ShowReportScreen","report","loaded","titles","_screenShadow","_touchScreen","_frontCameraSound","_backCameraSound","_flashLight","_cellularNetwork","_bluetooth","_wifiConnection","_incomingNoise","_outgoingNoise","_vibration","_charging","_batteryCapacity","_directionSensor","_balanceSensor","_distanceSensor","_compassSensor","_pressureSensor","_gpsSensor","_nfcSensor","_memory","_ram","_processor","_remoteCharging","_screws","_sideKeysVolume","_sideKeysTurnOn","_sideKeysMute","_homeKey","_fingerPrint","_faceId","_iCloud","get","Logo","createdAt","TickWithBorder","BorderSvg","CrossWithBorder","config","renderPositiveBoxes","renderNegativeBoxes","renderOneFunctionalityComponent","renderHeaderBottomLayer","renderFunctionality","Navigation","path","exact","component","awsmobile","App","locale","trLocale","Amplify","configure","amplifyConfig","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","LOG_LEVEL","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.09bcec63.chunk.js","sourcesContent":["export default {\r\n    primaryColor: '#2e81e8',\r\n    primaryDark: '#2471d1',\r\n    mariner: '#276ec5',\r\n    tagColor: '#5c9ded',\r\n    tropicalBlue: '#b8d4f7',\r\n    blue: '#1791B4',\r\n    pink: '#de6c8c',\r\n    disabled: '#dddddd',\r\n    errorColor: '#ec615f',\r\n    errorDark: '#cc2017',\r\n    cinnabar: '#e8382e',\r\n    ripeLemon: '#e9e10e',\r\n    warningColor: '#ffd043',\r\n    warningDark: '#ffc310',\r\n    athensGray: '#f6f6f9',\r\n    bartGray: '#9c9c9c',\r\n    bartGraySelect: '#979797',\r\n    black: '#1a2534',\r\n    green: '#17cc7b',\r\n    lightGreen: '#E4F3C7',\r\n    brandGreen: '#379b4f',\r\n    darkGreen: '#065109',\r\n    bartyGreen: '#04D684',\r\n    unReadMessageColor: \"#E5F1E8\",\r\n    bartyDarkGreen: '#00856C',\r\n    bartyDarkGreenGray: '#9EA8B1',\r\n    shippingGreen: '#379b4f',\r\n    bartyDark: '#0A2239',\r\n    tealGreen: '#128C7E',\r\n    tealDarkGreen: '#075E54',\r\n    bartyDarkLighter: '#0D2C4A',\r\n    bartyDarkGreenOpacity10: 'rgba(0, 133, 108, 0.1)',\r\n    bartyDarkGreenOpacity20: 'rgba(0, 133, 108, 0.2)',\r\n    bartyDarkGreenOpacity30: 'rgba(0, 133, 108, 0.3)',\r\n    bartyDarkGreenOpacity40: 'rgba(0, 133, 108, 0.4)',\r\n    bartyDarkGreenOpacity50: 'rgba(0, 133, 108, 0.5)',\r\n    bartyDarkGreenOpacity60: 'rgba(0, 133, 108, 0.6)',\r\n    bartyDarkGreenOpacity70: 'rgba(0, 133, 108, 0.7)',\r\n    bartyDarkGreenOpacity80: 'rgba(0, 133, 108, 0.8)',\r\n    bartyDarkGreenOpacity90: 'rgba(0, 133, 108, 0.9)',\r\n    bartyDarkGreenOpacity: '#DCF1E9',\r\n    bartyRed: '#B33A3A',\r\n    ptt: '#FFD602',\r\n    octovan: '#ED6823',\r\n    facebookBlue: '#4267b2',\r\n    blackAlt: '#333333',\r\n    white: '#fff',\r\n    whiteAlt: '#fafbfc',\r\n    gray: '#d9dbe5',\r\n    boticelli: '#cad5e4',\r\n    jumbo: '#77787e',\r\n    slate: '#3a4057',\r\n    transparent: 'transparent',\r\n    maize: '#F6D5AB',\r\n    internalNoteBorderColor: '#f1be7d',\r\n    grey: '#E1E1E1',\r\n    greyLight: '#FAFAFA',\r\n    grayLighter: '#F5F5F5',\r\n    linkColor: '#868686',\r\n    brandPink: '#DD6A89',\r\n    brandDarkBlue: '#202731',\r\n    brandRed: '#CF1A0E',\r\n    red: '#FF0000',\r\n    yelOrange: '#F2CC0F',\r\n    borderColor: '#d9dbe5',\r\n    shadowColor: '#ecedf2',\r\n    fontColorAlt: '#434862',\r\n    inputBorder: '#959595',\r\n    fontFamilyMedium: 'libreFontMedium',\r\n    fontFamilyBold: 'libreFontBold',\r\n    gothamBook: 'Gotham-Book',\r\n    gothamBookItalic: 'Gotham-BookItalic',\r\n    gothamBold: 'Gotham-Bold',\r\n    gothamMedium: 'Gotham-Medium',\r\n    dosisBold: 'Dosis-Bold',\r\n    dosisMedium: 'Dosis-Medium',\r\n    borderBottomShadow: {\r\n        borderBottomColor: 'rgba(6, 81, 9, 0.1)',\r\n        borderBottomWidth: 1,\r\n    },\r\n    // style groups\r\n    absoluteCenter: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    dNone: { display: 'none' },\r\n    expercepte: {\r\n        crushed: \"#F49E21\",\r\n        broken: \"#E9686A\",\r\n        cracked: \"#32B1CC\",\r\n        crushedAndBroken: \"linear-gradient(90deg, #F49E21 0%, #E9686A 100%)\",\r\n        crushedAndCracked: \"linear-gradient(90deg, #F49E21 0%, #32B1CC 100%)\",\r\n        brokenAndCracked: \"linear-gradient(90deg, #E9686A 0%, #32B1CC 100%)\",\r\n        crushedBrokenAndCracked: \"linear-gradient(90deg, #F49E21 0%, #E9686A 48.22%, #32B1CC 100%)\"\r\n    }\r\n};","import React, { Component } from 'react';\r\nimport globalStyles from '../../common/style';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from \"react-router\";\r\nimport moment from \"moment\";\r\n\r\nclass ReportsScreen extends Component {\r\n    state = {\r\n        localStorageKeys: [],\r\n        localStorageData: {},\r\n        newReportID: this.randomStringGenerator()\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.localStorageHandlerForState()\r\n    }\r\n\r\n    randomStringGenerator(length = 8) {\r\n        const chars = \"abcdefghijklmnoprstuvyz\";\r\n        let result = \"\";\r\n        for (let i = 0; i < length; i++) result += chars.charAt(Math.floor(Math.random() * chars.length));\r\n        return result;\r\n    }\r\n    randomNumberGenerator(length = 8) {\r\n        const nums = \"0123456789\";\r\n        let result = \"\";\r\n        for (let i = 0; i < length; i++) result += nums.charAt(Math.floor(Math.random() * nums.length));\r\n        return result;\r\n    }\r\n\r\n    localStorageHandlerForState() {\r\n        const items = { ...localStorage };\r\n        let keys = Object.keys(items);\r\n        const allDataKeysSaved = keys.filter((key, i) => {\r\n            if (key.includes(\"_report_\")) {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        })\r\n        const localStorageData = items;\r\n        const finalData = {};\r\n        allDataKeysSaved.reverse().forEach((item, index) => {\r\n            finalData[item] = JSON.parse(localStorageData[item])\r\n        })\r\n        this.setState({\r\n            localStorageKeys: allDataKeysSaved,\r\n            localStorageData: finalData\r\n        })\r\n    }\r\n    startANewReport() {\r\n        return (\r\n            <a role=\"a\" target=\"__blank\" href={`report/${this.state.newReportID}`} style={{\r\n                width: '100%',\r\n                textAlign: \"center\",\r\n                height: \"100px\",\r\n                margin: \"auto\",\r\n                marginBottom: \"15px\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                fontSize: \"25px\",\r\n                fontFamily: \"'Rubik',sans-serif\",\r\n                backgroundColor: globalStyles.bartyDark,\r\n                color: globalStyles.white,\r\n                textDecoration: \"none\"\r\n            }}>\r\n                Yeni Rapor Başlat\r\n            </a>\r\n        )\r\n    }\r\n    renderReports({ key }) {\r\n        return (\r\n            <div class=\"col-lg-3 col-md-6 col-sm-12\"\r\n                style={{\r\n                    height: \"150px\",\r\n                    marginTop: \"15px\"\r\n                }}>\r\n                <button onClick={() => {\r\n                    localStorage.removeItem(key);\r\n                    this.localStorageHandlerForState()\r\n                }} style={{\r\n                    position: \"absolute\",\r\n                    right: \"20px\",\r\n                    top: \"5px\",\r\n                    backgroundColor: globalStyles.white,\r\n                    color: globalStyles.bartyDark,\r\n                    outline: \"none\",\r\n                    width: \"40px\",\r\n                    height: \"40px\",\r\n                    border: \"1px solid black\",\r\n                    borderRadius: \"20px\",\r\n                    zIndex: 999,\r\n                    cursor: \"pointer\"\r\n                }}>X</button>\r\n                <div style={{\r\n                    padding: \"15px\",\r\n                    height: \"inherit\",\r\n                    width: \"100%\",\r\n                    height: \"auto\",\r\n                    backgroundColor: this.state.localStorageData[key]?.completed\r\n                        ? globalStyles.bartyGreen\r\n                        : globalStyles.yelOrange,\r\n                    color: globalStyles.bartyDark\r\n                }}>\r\n                    <a\r\n                        role=\"button\"\r\n                        href={!this.state.localStorageData[key]?.completed\r\n                            ? `/report/${key.replace(\"_report_\", \"\")}`\r\n                            : `/view/${this.state.localStorageData[key]?._id}`}\r\n                        style={{\r\n                            color: globalStyles.bartyDark\r\n                        }}>\r\n                        <b>Report ID: {key}</b>\r\n                        <br />\r\n                        <b>Model: {this.state.localStorageData[key]?.general?.model || \"Girilmedi\"}</b>\r\n                        <br />\r\n                        <b>Marka: {this.state.localStorageData[key]?.general?.brand || \"Girilmedi\"}</b>\r\n                        <br />\r\n                        <b>Raporun Durumu: {this.state.localStorageData[key]?.completed ? \"Tamamlandı\" : \"Tamamlanmadı\"}\r\n                        </b>\r\n                        <br />\r\n                        <b>Başlanma Tarihi: {\r\n                            moment(this.state.localStorageData[key]?.general?.startDate).format(\"LLL\")\r\n                        }\r\n                        </b>\r\n\r\n                    </a>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n    render() {\r\n        return (\r\n            <div class=\"container-fluid\" style={{\r\n                backgroundColor: globalStyles.white,\r\n                minHeight: '100vh'\r\n            }}>\r\n                <div class=\"row\">\r\n                    {this.startANewReport()}\r\n                </div>\r\n                <div class=\"row\" style={{ minHeight: \"100vh\" }}>\r\n                    {this.state.localStorageKeys.length === 0 && <div style={{ textAlign: \"center\", width: '100%', height: \"100%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}> Burada Henüz Bir Rapor Bulunmuyor</div>}\r\n                    {this.state.localStorageKeys.map((item, index) => {\r\n                        return this.renderReports({\r\n                            key: item\r\n                        })\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(ReportsScreen)","import { Storage } from 'aws-amplify';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nfunction makeUID() {\r\n    return uuidv4()\r\n}\r\nfunction uploadFile(\r\n    file,\r\n    cb = (storageResult) => {\r\n\r\n    },\r\n    options = {\r\n        level: \"public\",\r\n        type: \"images\",\r\n        key: makeUID()\r\n    }) {\r\n    console.log(file);\r\n    const typeArr = file?.name.split(\".\");\r\n    const type = typeArr[typeArr.length - 1];\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            const fileKey = `${options?.type}/${options?.key}.${type}`;\r\n            const storageResult = await Storage.put(fileKey, file, {\r\n                level: options?.level,\r\n                type: file?.type\r\n            })\r\n            cb(storageResult)\r\n            resolve(storageResult);\r\n        } catch (e) {\r\n            reject(false)\r\n        }\r\n    })\r\n}\r\nexport default {\r\n    uploadFile\r\n}","import { Storage } from 'aws-amplify';\r\nfunction removeFile(\r\n    key,\r\n    options = {\r\n        level: \"public\",\r\n    }) {\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            const fileKey = `${key}`;\r\n            console.log(key)\r\n            const storageResult = await Storage.remove(fileKey, {\r\n                level: \"public\"\r\n            })\r\n            resolve(storageResult);\r\n        } catch (e) {\r\n            reject(false)\r\n        }\r\n    })\r\n}\r\nexport default {\r\n    removeFile\r\n}","import s3 from './s3/index.js';\r\n\r\nexport default {\r\n    s3\r\n}","import uploads from './create';\r\nimport remove from './remove'\r\n\r\nexport default {\r\n    ...uploads,\r\n    ...remove\r\n}","import axios from \"axios\";\r\nconst request = axios.create({\r\n    baseURL: false\r\n        ? \"http://localhost/api\"\r\n        : \"https://api-v1.xprcsv.net/api\",\r\n    withCredentials: false,\r\n    headers: {\r\n        'Authorization': `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTVkOWMzNmM1ZTYyM2YxMWVmMGY5MTYiLCJuYW1lIjoiQ2FuIiwic3VybmFtZSI6IkfDtmvDp2Vhc2xhbiIsInBob25lTnVtYmVyIjoiNTQ0NDg1MDU4NSIsImVtYWlsIjoiY2FuZ29rY2Vhc2xhbnlAZ21haWwuY29tIiwibGFuZ3VhZ2UiOjAsInJvbGUiOjEsImNyZWF0ZWRBdCI6IjIwMjEtMTAtMDZUMTI6NTM6MTAuODE0WiIsInVwZGF0ZWRBdCI6IjIwMjEtMTAtMDZUMTI6NTM6MTAuODE0WiIsIl9fdiI6MCwiaWF0IjoxNjMzNTI2MjkyfQ.3yB0tqhXftBCdV6NSxvxGQ03SkzN3OUwBZkZFPa-gA8`,\r\n        'Access-Control-Allow-Origin': '*'\r\n    }\r\n})\r\n\r\nexport default request;","import React, { Component } from 'react';\r\nimport _ from 'lodash'\r\nimport { Link } from 'react-router';\r\nimport globalStyles from '../../common/style';\r\nimport { withRouter } from \"react-router\";\r\nimport aws from '../../utils/aws';\r\nimport request from '../../request';\r\nclass ReporterScreen extends Component {\r\n    randomIds = () => {\r\n        let randomIds = []\r\n        for (let i = 0; i < 20; i++) {\r\n            randomIds.push(this.randomIdGenerator())\r\n        }\r\n        return randomIds\r\n    }\r\n    cosmeticTypesColors = {\r\n        \"Ezik\": globalStyles.expercepte.crushed,\r\n        \"Kırık\": globalStyles.expercepte.broken,\r\n        \"Çatlak\": globalStyles.expercepte.cracked,\r\n        \"Ezik ve Kırık\": globalStyles.expercepte.crushedAndBroken,\r\n        \"Ezik ve Çatlak\": globalStyles.expercepte.crushedAndCracked,\r\n        \"Kırık ve Çatlak\": globalStyles.expercepte.brokenAndCracked,\r\n        \"Ezik, Kırık ve Çatlak\": globalStyles.expercepte.crushedBrokenAndCracked\r\n    }\r\n    cosmeticTypes = [\r\n        \"Ezik\",\r\n        \"Kırık\",\r\n        \"Çatlak\",\r\n        \"Ezik ve Kırık\",\r\n        \"Ezik ve Çatlak\",\r\n        \"Kırık ve Çatlak\",\r\n        \"Ezik, Kırık ve Çatlak\"\r\n    ]\r\n    cosmeticTypesNums = {\r\n        \"Ezik\": 1,\r\n        \"Kırık\": 10,\r\n        \"Çatlak\": 100,\r\n        \"Ezik ve Kırık\": 11,\r\n        \"Ezik ve Çatlak\": 101,\r\n        \"Kırık ve Çatlak\": 110,\r\n        \"Ezik, Kırık ve Çatlak\": 111\r\n    }\r\n    numsCosmeticTypes = {\r\n        \"1\": \"Ezik\",\r\n        \"10\": \"Kırık\",\r\n        \"100\": \"Çatlak\",\r\n        \"11\": \"Ezik ve Kırık\",\r\n        \"101\": \"Ezik ve Çatlak\",\r\n        \"110\": \"Kırık ve Çatlak\",\r\n        \"111\": \"Ezik, Kırık ve Çatlak\",\r\n        \"12\": \"Ezik ve Kırık\",\r\n        \"102\": \"Ezik ve Çatlak\",\r\n        \"112\": \"Ezik, Kırık ve Çatlak\",\r\n        \"21\": \"Ezik ve Kırık\",\r\n        \"120\": \"Kırık ve Çatlak\",\r\n        \"121\": \"Ezik, Kırık ve Çatlak\",\r\n        \"122\": \"Ezik, Kırık ve Çatlak\",\r\n        \"201\": \"Ezik ve Çatlak\",\r\n        \"210\": \"Kırık ve Çatlak\",\r\n        \"211\": \"Ezik, Kırık ve Çatlak\",\r\n        \"221\": \"Ezik, Kırık ve Çatlak\"\r\n    }\r\n    cosmeticLayerTypes = {\r\n        front: \"Ön Taraf\",\r\n        back: \"Arka Taraf\",\r\n        left: \"Sol Taraf\",\r\n        right: \"Sağ Taraf\",\r\n        top: \"Üst Taraf\",\r\n        bottom: \"Alt Taraf\"\r\n    }\r\n    functionalityFormData = [{\r\n        title: \"Ekranda gölgelenme bulunmuyor: \",\r\n        stateId: \"_screenShadow\",\r\n        isFirst: true\r\n    },\r\n    {\r\n        title: \"Dokunmatik Çalışıyor: \",\r\n        stateId: \"_touchScreen\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Ön Kamera ve Ses'te bir sorun yok: \",\r\n        stateId: \"_frontCameraSound\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Arka Kamera ve Ses'te bir sorun yok: \",\r\n        stateId: \"_backCameraSound\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Flash ışığında bir sorun yok: \",\r\n        stateId: \"_flashLight\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Şebeke verisinde bir sorun yok: \",\r\n        stateId: \"_cellularNetwork\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Bluetooth'da bir sorun yok: \",\r\n        stateId: \"_bluetooth\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Wifi bağlantısında bir sorun yok: \",\r\n        stateId: \"_wifiConnection\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Gelen ses'te bir sorun yok: \",\r\n        stateId: \"_incomingNoise\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Giden ses'te bir sorun yok: \",\r\n        stateId: \"_outgoingNoise\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Titreşimde bir sorun yok: \",\r\n        stateId: \"_vibration\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Cihazın şarj olmasında bir sorun yok: \",\r\n        stateId: \"_charging\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Cihazın pil kapasitesinde bir sorun yok: \",\r\n        stateId: \"_batteryCapacity\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Cihazın yön sensöründe bir sorun yok: \",\r\n        stateId: \"_directionSensor\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Cihazın denge sensöründe bir sorun yok: \",\r\n        stateId: \"_balanceSensor\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Cihazın mesafe sensöründe bir sorun yok: \",\r\n        stateId: \"_distanceSensor\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Cihazın pusulasında bir sorun yok: \",\r\n        stateId: \"_compassSensor\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Cihazın basınç sensöründe bir sorun yok: \",\r\n        stateId: \"_pressureSensor\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Cihazın GPS'inde bir sorun yok: \",\r\n        stateId: \"_gpsSensor\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Cihazın NFC'inde bir sorun yok: \",\r\n        stateId: \"_nfcSensor\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Cihazın hafızasında bir sorun yok: \",\r\n        stateId: \"_memory\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Cihazın RAM'inde bir sorun yok: \",\r\n        stateId: \"_ram\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Cihazın işlemcisinde bir sorun yok: \",\r\n        stateId: \"_processor\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Cihazın kablosuz şarjında bir sorun yok: \",\r\n        stateId: \"_remoteCharging\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Cihazın vidalarında bir sorun yok: \",\r\n        stateId: \"_screws\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Cihazın yan ses tuşlarında bir sorun yok: \",\r\n        stateId: \"_sideKeysVolume\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Cihazın yan açma kapama tuşlarında bir sorun yok: \",\r\n        stateId: \"_sideKeysTurnOn\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Cihazın yan sessize al tuşunda bir sorun yok (iPhone): \",\r\n        stateId: \"_sideKeysMute\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Cihazın home tuşunda bir sorun yok: \",\r\n        stateId: \"_homeKey\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Cihazın finger print tuşunda bir sorun yok: \",\r\n        stateId: \"_fingerPrint\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Cihazın FaceID'sinde bir sorun yok: (iPhone)\",\r\n        stateId: \"_faceId\",\r\n        isFirst: false\r\n    },\r\n    {\r\n        title: \"Cihazın ICloud'unda bir sorun yok: (iPhone)\",\r\n        stateId: \"_iCloud\",\r\n        isFirst: false\r\n    }\r\n\r\n    ]\r\n    stateInitial = {\r\n        _id: null,\r\n        completed: false,\r\n        multipleSelectionMode: false,\r\n        multipleCheckSum: {\r\n            front: {\r\n\r\n            },\r\n            back: {\r\n\r\n            },\r\n            left: {\r\n\r\n            },\r\n            right: {\r\n\r\n            },\r\n            top: {\r\n\r\n            },\r\n            bottom: {\r\n\r\n            }\r\n        },\r\n        multiple: {\r\n            front: {\r\n\r\n            },\r\n            back: {\r\n\r\n            },\r\n            left: {\r\n\r\n            },\r\n            right: {\r\n\r\n            },\r\n            top: {\r\n\r\n            },\r\n            bottom: {\r\n\r\n            }\r\n        },\r\n        type: \"\",\r\n        code: \"\",\r\n        oneCellModalSelectValue: this.cosmeticTypes[0],\r\n        oneCellModalTextValue: \"\",\r\n        oneCellModalDeletedImages: [],\r\n        oneCellModalImages: [],\r\n        oneCellModalImagesLength: 0,\r\n        multipleCellModalSelectValue: this.cosmeticTypes[0],\r\n        multipleCellModalTextValue: \"\",\r\n        multipleCellModalImages: [],\r\n        multipleCellModalDeletedImages: [],\r\n        multipleCellModalImagesLength: 0,\r\n        updateCellsModalId: \"\",\r\n        updateCellsModalSelectValue: this.cosmeticTypes[0],\r\n        updateCellsModalOldSelectValue: this.cosmeticTypes[0],\r\n        updateCellsModalTextValue: \"\",\r\n        updateCellsModalImages: [],\r\n        updateCellsModalImagesLength: 0,\r\n        updateCellsModalDataIndex: 0,\r\n        updateCellsModalDeletedImages: [],\r\n        updateCellsModalCodes: [],\r\n        general: {\r\n            email: \"\",\r\n            telephone: \"\",\r\n            model: \"\",\r\n            brand: \"\",\r\n            startDate: new Date(),\r\n            bill: null,\r\n            box: null,\r\n            guarentee: \"\"\r\n        },\r\n        legal: {\r\n            state: \"\",\r\n            source: \"\",\r\n            date: \"\",\r\n            brandModel: \"\"\r\n        },\r\n        cosmetics: {\r\n            front: {\r\n\r\n            },\r\n            back: {\r\n\r\n            },\r\n            left: {\r\n\r\n            },\r\n            right: {\r\n\r\n            },\r\n            top: {\r\n\r\n            },\r\n            bottom: {\r\n\r\n            }\r\n        },\r\n        cosmeticsNotes: {\r\n            front: [],\r\n            back: [],\r\n            left: [],\r\n            right: [],\r\n            top: [],\r\n            bottom: []\r\n        },\r\n        functionality: {\r\n\r\n        },\r\n        randomIds: this.randomIds(),\r\n        modalImageSrc: \"https://cdn.shopify.com/s/files/1/0986/0842/products/21XMEfB8BFL.gif?v=1571515951\"\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = JSON.parse(localStorage.getItem(\"_report_\" + this.props.match.params.id)) || this.stateInitial;\r\n        console.log(this.state)\r\n        this.toggleMultipleSelectionMode = this.toggleMultipleSelectionMode.bind(this);\r\n        this.saveLatestStateToLocalStorage = this.saveLatestStateToLocalStorage.bind(this);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('beforeunload', this.saveLatestStateToLocalStorage); // remove the event handler for normal unmounting\r\n    }\r\n\r\n    componentDidMount() {\r\n        /* console.log(this.mergeCosmetics(\"Ezik ve Çatlak\", \"Ezik ve Kırık\"))\r\n        console.log(this.mergeCosmetics(\"Ezik\", \"Ezik ve Kırık\"))\r\n        console.log(this.mergeCosmetics(\"Ezik\", \"Ezik ve Çatlak\")) */\r\n        this.documentListeners();\r\n        this.updateCosmeticsFromCosmeticNotes()\r\n        console.log(this.state.cosmeticsNotes)\r\n    }\r\n    updateCosmeticsFromCosmeticNotes() {\r\n        let cosmetics = Object.create(this.state.cosmetics);\r\n        [\"front\", \"back\", \"left\", \"right\", \"top\", \"bottom\"].forEach((type, i) => {\r\n            (Object.keys(cosmetics?.[type] || {})).map((code, index) => {\r\n                let problemType = \"\";\r\n                if (cosmetics?.[type]?.[code].problemTypes.length <= 1) {\r\n                    problemType = cosmetics?.[type]?.[code]?.problemTypes[0];\r\n                } else {\r\n                    const firstElement = cosmetics?.[type]?.[code]?.problemTypes[0];\r\n                    cosmetics?.[type]?.[code].problemTypes.slice(1).forEach((p, c) => {\r\n                        if (c === 0) {\r\n                            problemType = this.mergeCosmetics(firstElement, p)\r\n                        }\r\n                        else {\r\n                            problemType = this.mergeCosmetics(problemType, p)\r\n                        }\r\n                    })\r\n                }\r\n                cosmetics = {\r\n                    ...cosmetics,\r\n                    [type]: {\r\n                        ...cosmetics?.[type],\r\n                        [code]: {\r\n                            ...cosmetics?.[type]?.[code],\r\n                            problemType\r\n                        }\r\n                    }\r\n                }\r\n                console.log(cosmetics);\r\n            })\r\n        })\r\n        this.setState({\r\n            ...this.stateInitial.cosmetics,\r\n            ...cosmetics\r\n        })\r\n    }\r\n    documentListeners() {\r\n        const context = this;\r\n        window.addEventListener('beforeunload', this.saveLatestStateToLocalStorage.bind(this));\r\n        document.addEventListener(\"keydown\", function (event) {\r\n            if (event.key === \"Control\" || event.metaKey) {\r\n                context.toggleMultipleSelectionMode(true)\r\n            }\r\n        })\r\n        document.addEventListener(\"keyup\", function (event) {\r\n            if (event.key === \"Control\" || event.metaKey) {\r\n                context.toggleMultipleSelectionMode(false)\r\n            }\r\n        })\r\n    }\r\n    cleanState() {\r\n        this.setState({\r\n            ...this.stateInitial\r\n        }, () => {\r\n            this.saveLatestStateToLocalStorage()\r\n            this.removeDatasFromRadioButtons()\r\n            this._generalBrand.value = \"\";\r\n            this._generalModel.value = \"\";\r\n            this._generalGuarantee.value = \"\";\r\n            this._email.value = \"\";\r\n            this._telephone.value = \"\";\r\n            this._legalState.value = \"\";\r\n            this._legalSource.value = \"\";\r\n            this._legalDate.value = \"\";\r\n            this._legalInformation.value = \"\";\r\n        })\r\n    }\r\n    removeDatasFromRadioButtons() {\r\n        /* this._positiveInput.value = null\r\n        this._negativeInput.value = null */\r\n    }\r\n    saveLatestStateToLocalStorage() {\r\n        localStorage.setItem(\"_report_\" + this.props.match.params?.id, JSON.stringify(this.state));\r\n    }\r\n    multipleResetData() {\r\n        return {\r\n            front: {\r\n\r\n            },\r\n            back: {\r\n\r\n            },\r\n            left: {\r\n\r\n            },\r\n            right: {\r\n\r\n            },\r\n            top: {\r\n\r\n            },\r\n            bottom: {\r\n\r\n            }\r\n        }\r\n    }\r\n    mergeCosmetics(first, second) {\r\n        const firstNum = this.cosmeticTypesNums?.[first];\r\n        console.log(\"First Num:\", firstNum)\r\n        const secondNum = this.cosmeticTypesNums?.[second];\r\n        console.log(\"Second Num:\", secondNum)\r\n        if (first === second) {\r\n            return first\r\n        }\r\n        const total = firstNum + secondNum;\r\n        console.log(total)\r\n        console.log(this.numsCosmeticTypes[total.toString()])\r\n        return this.numsCosmeticTypes[total.toString()];\r\n    }\r\n    multipleSelectionHasData() {\r\n        const initialData = this.multipleResetData();\r\n        const currentData = this.state.multipleCheckSum;\r\n        if (_.isEqual(initialData, currentData)) {\r\n            return false;\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n    toggleMultipleSelectionMode(bool) {\r\n        if (this.state.multipleSelectionMode !== bool) {\r\n            this.setState(state => ({\r\n                multipleSelectionMode: bool,\r\n                multiple: this.multipleResetData(),\r\n                multipleCheckSum: this.state.multiple\r\n            }), () => {\r\n                console.log(this.state.multipleSelectionMode)\r\n                if (this.state.multipleSelectionMode === false && this.multipleSelectionHasData()) {\r\n                    console.log(JSON.stringify(this.state.multipleCheckSum))\r\n                    this._multipleModalOpener.click()\r\n                }\r\n            })\r\n        }\r\n    }\r\n    randomIdGenerator(length = 6) {\r\n        let chars = \"ABCDEFHIJKLMNOPRSTUVYZabcdefghijklmnoprstuvyz0123456789\";\r\n        let res = \"\";\r\n        for (let i = 0; i < length; i++) {\r\n            res += chars.charAt(Math.floor(Math.random() * chars.length));\r\n        }\r\n        return res;\r\n    }\r\n    renderHeader() {\r\n        return <div class=\"row\" style={{\r\n            height: \"100px\",\r\n            backgroundColor: globalStyles.bartyDark,\r\n            color: globalStyles.white,\r\n            fontFamily: \"'Rubik',sans-serif\",\r\n            fontSize: '27px',\r\n            textAlign: 'center',\r\n            flex: 1,\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        }}>\r\n            ExperCepte Rapor Hazırlayıcı\r\n        </div>\r\n    }\r\n    renderSmallHeader(title, callback) {\r\n        return (\r\n            <div style={{\r\n                textAlign: 'left',\r\n                fontSize: \"30px\",\r\n                marginRight: \"15px\",\r\n                marginTop: \"20px\",\r\n                marginBottom: \"20px\"\r\n            }}>\r\n                <b>{title}</b>\r\n                <span style={{ marginLeft: 30 }}>{this.renderCleanThePartButton(callback)}</span>\r\n            </div>\r\n        )\r\n    }\r\n    renderTitle(title = \"\") {\r\n        return <h3>{title}</h3>\r\n    }\r\n    renderPalette() {\r\n        return (<div style={{\r\n            width: '100%',\r\n            height: \"120px\",\r\n            whiteSpace: \"nowrap\",\r\n            overflowX: \"scroll\",\r\n            overflowY: \"hidden\"\r\n        }}>\r\n            {Object.keys(this.cosmeticTypesColors).map((item, index) => {\r\n                return <div style={{\r\n                    margin: \"10px\",\r\n                    padding: \"0px 10px 0px 10px\",\r\n                    minWidth: \"100px\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    height: \"30px\",\r\n                    flex: 1,\r\n                    textAlign: \"center\",\r\n                    textAlignVertical: \"center\",\r\n                    display: \"inline-block\",\r\n                }}>\r\n                    <div style={{\r\n                        display: \"inline-block\", width: \"50px\", height: \"50px\",\r\n                        background: this.cosmeticTypesColors[item]\r\n                    }}></div>\r\n                    <div style={{ fontWeight: \"bold\" }}>{item}</div>\r\n                </div>\r\n            })}\r\n        </div>)\r\n    }\r\n\r\n    /* COSMETICS NOTES ONE CELL INPUT MODAL METHODS */\r\n    renderOneCellModalOpener() {\r\n        return <button type=\"button\"\r\n            class=\"btn btn-primary\"\r\n            style={{ display: \"none\" }}\r\n            ref={(modalOpener) => {\r\n                this._oneCellModalOpener = modalOpener\r\n            }}\r\n            data-toggle=\"modal\"\r\n            data-target=\"#cosmeticsInputModal\">\r\n            Open modal for @mdo\r\n        </button>\r\n    }\r\n    onSelectChangeOneCellModal = (e) => {\r\n        this.setState({\r\n            oneCellModalSelectValue: e.target.value\r\n        })\r\n    }\r\n    renderOptionsOneCellModal() {\r\n        return this.cosmeticTypes.map((item, index) => {\r\n            if (this.state.cosmetics[this.state.type]?.[this.state.code]) {\r\n                if (this.state.cosmetics[this.state.type]?.[this.state.code]?.problemType) {\r\n                    return <option value={item}\r\n                        selected={this.state.cosmetics[this.state.type]\r\n                            ?.[this.state.code]\r\n                            ?.problemType\r\n                            === item}>\r\n                        {item}\r\n                    </option>\r\n                } else {\r\n                    return <option value={item}>\r\n                        {item}\r\n                    </option>\r\n                }\r\n            } else {\r\n                return <option value={item}>\r\n                    {item}\r\n                </option>\r\n            }\r\n\r\n        })\r\n    }\r\n    closeWithoutSaveOneCellModal = () => {\r\n        this.setState({\r\n            oneCellModalSelectValue: this.cosmeticTypes[0],\r\n            oneCellModalTextValue: \"\",\r\n            oneCellModalImages: [],\r\n            oneCellModalDeletedImages: []\r\n        })\r\n        this._oneCellModalFileInput.value = null\r\n    }\r\n    closeAndSaveOneCellModal = () => {\r\n\r\n        this.setState(state => ({\r\n            cosmetics: {\r\n                ...state?.cosmetics,\r\n                [this.state.type]: {\r\n                    ...state.cosmetics[this.state.type],\r\n                    [this.state.code]: {\r\n                        problemType: this.state.cosmetics?.[this.state.type]?.[this.state.code]?.problemType\r\n                            ? this.mergeCosmetics(\r\n                                this.state.cosmetics?.[this.state.type]?.[this.state.code]?.problemType,\r\n                                this.state.oneCellModalSelectValue\r\n                            )\r\n                            : this.state.oneCellModalSelectValue,\r\n                        problem: this.state.oneCellModalTextValue,\r\n                        problemTypes: [this.state.oneCellModalSelectValue],\r\n                        images: this.state.oneCellModalImages\r\n                    }\r\n                }\r\n            },\r\n            cosmeticsNotes: {\r\n                ...state?.cosmeticsNotes,\r\n                [this.state.type]: [\r\n                    ...state?.cosmeticsNotes[this.state.type],\r\n                    {\r\n                        id: this.randomIdGenerator(10),\r\n                        sort: this.state.cosmeticsNotes[this.state.type].length,\r\n                        codes: [this.state.code],\r\n                        problemType: this.state.oneCellModalSelectValue,\r\n                        problem: this.state.oneCellModalTextValue,\r\n                        images: this.state.oneCellModalImages\r\n                    }\r\n                ]\r\n\r\n            },\r\n            oneCellModalSelectValue: this.cosmeticTypes[0],\r\n            oneCellModalTextValue: \"\",\r\n            oneCellModalImages: [],\r\n            oneCellModalDeletedImages: []\r\n        }), () => {\r\n            this._oneCellModalTextArea.defaultValue = this.state.oneCellModalTextValue\r\n            this._oneCellModalFileInput.value = null\r\n            this.saveLatestStateToLocalStorage()\r\n        })\r\n    }\r\n    fileUploadHandlerOneCellModal = (e) => {\r\n        this.setState({\r\n            oneCellModalImagesLength: e.target.files.length\r\n        }, () => {\r\n            const context = this;\r\n            [].forEach.call(e.target.files, (file, index) => {\r\n                aws.s3.uploadFile(file)\r\n                    .then(fileResult => {\r\n                        context.setState(state => ({\r\n                            oneCellModalImagesLength: state.oneCellModalImagesLength - 1,\r\n                            oneCellModalImages: state.oneCellModalImages.concat(`https://report.xprcsv.net/public/${fileResult?.key}`)\r\n                        }))\r\n                    })\r\n                    .catch(err => {\r\n                        console.error(err)\r\n                    })\r\n            })\r\n        })\r\n    }\r\n    renderCompleteButtonContentOneCell() {\r\n        return (\r\n            this.state.oneCellModalImagesLength === 0\r\n                ? (<span>Kaydet ve Kapat</span>)\r\n                : (\r\n                    <div class=\"justify-content-center align-items-center\">\r\n                        <img src=\"https://c.tenor.com/I6kN-6X7nhAAAAAj/loading-buffering.gif\" height=\"23px\" width=\"23px\" />\r\n                    </div>\r\n                )\r\n        )\r\n    }\r\n\r\n    oneCellDeleteImage = (e, index) => {\r\n        const oneCellModalImages = Array.from(this.state.oneCellModalImages) || [];\r\n        let deletedImage = oneCellModalImages.splice(index, 1)\r\n        const arr = Array.from(deletedImage);\r\n        this.setState(state => ({\r\n            oneCellModalImages: oneCellModalImages,\r\n            oneCellModalDeletedImages: (this.state?.oneCellModalDeletedImages || []).concat(arr)\r\n        }), () => {\r\n            //alert(JSON.stringify(this.state.updateCellsModalDeletedImages))\r\n        })\r\n    }\r\n\r\n    renderOneCellImagesContainer() {\r\n        return (this.state?.oneCellModalImages || []).map((item, index) => {\r\n            return <div style={{\r\n                display: \"inline-block\",\r\n                height: \"230px\",\r\n                width: \"150px\",\r\n                margin: \"10px\",\r\n            }}>\r\n                <img src={item} loading=\"lazy\" style={{\r\n                    objectFit: \"cover\",\r\n                    whiteSpace: \"normal\",\r\n                    border: \"3px solid black\"\r\n                }} width=\"150px\" height=\"150px\" alt=\"Image\" resizeMethod=\"cover\" />\r\n                <div style={{ height: \"38px\", marginTop: \"4px\" }}>\r\n                    <button\r\n                        class=\"btn btn-primary\"\r\n                        onClick={(e) => {\r\n                            this.oneCellDeleteImage(e, index)\r\n                        }}\r\n                        style={{\r\n                            backgroundColor: globalStyles.red,\r\n                            borderColor: globalStyles.red,\r\n                            color: globalStyles.white,\r\n                            fontSize: \"16px\",\r\n                            textAlign: \"center\",\r\n                            verticalAlign: \"center\",\r\n                            height: \"38px\",\r\n                            width: '100%'\r\n                        }}>\r\n                        Resimi Sil &times;\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        })\r\n    }\r\n\r\n    renderOneCellModal() {\r\n        return (\r\n            <div class=\"modal fade\" id=\"cosmeticsInputModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"cosmeticsInputModal\" aria-hidden=\"true\">\r\n                {this.renderOneCellModalOpener()}\r\n                <div class=\"modal-dialog\" role=\"document\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h5 class=\"modal-title\"\r\n                                id=\"exampleMultipleModalLabel\"\r\n                                style={{\r\n                                    fontWeight: \"bold\"\r\n                                }}>{this.cosmeticLayerTypes[this.state?.type]} - {this.state.code} numaralı katmanlar için giriliyor</h5>\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={this.closeWithoutSaveOneCellModal}\r\n                                class=\"close\"\r\n                                data-dismiss=\"modal\"\r\n                                aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <form>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"recipient-name\" class=\"col-form-label\">Deformasyon Tipi:</label>\r\n                                    <div>{this.state.oneCellModalSelectValue}</div>\r\n                                    <select type=\"text\"\r\n                                        defaultValue={this.state.cosmetics[this.state.type]?.[this.state.code]?.problemType || \"Ezik\"}\r\n                                        onChange={this.onSelectChangeOneCellModal}\r\n                                        class=\"form-control\"\r\n                                        id=\"recipient-name\">\r\n                                        {this.renderOptionsOneCellModal()}\r\n                                    </select>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"message-text\" class=\"col-form-label\">Deformasyon Açıklaması:</label>\r\n                                    <textarea\r\n                                        class=\"form-control\"\r\n                                        id=\"message-text\"\r\n                                        rows=\"6\"\r\n                                        placeholder=\"Bu alanla ilgili bir açıklama girebilirsiniz\"\r\n                                        ref={textArea => {\r\n                                            this._oneCellModalTextArea = textArea;\r\n                                        }}\r\n                                        defaultValue={this.state.oneCellModalTextValue}\r\n                                        onKeyUp={(e) => {\r\n                                            this.setState({\r\n                                                oneCellModalTextValue: e.target.value\r\n                                            })\r\n                                        }}></textarea>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <div class=\"scroll-hidden\" style={{\r\n                                        overflowY: \"hidden\",\r\n                                        overflowX: \"scroll !important\",\r\n                                        maxHeight: \"230px\",\r\n                                        width: '100%',\r\n                                        whiteSpace: \"nowrap\"\r\n                                    }}>\r\n                                        {this.renderOneCellImagesContainer()}\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <input type=\"file\"\r\n                                        ref={(fileInput) => {\r\n                                            this._oneCellModalFileInput = fileInput;\r\n                                        }}\r\n                                        multiple\r\n                                        onChange={this.fileUploadHandlerOneCellModal}\r\n                                        accept='image/*' />\r\n                                </div>\r\n\r\n                            </form>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn btn-secondary\"\r\n                                onClick={this.closeWithoutSaveOneCellModal}\r\n                                data-dismiss=\"modal\">\r\n                                Kaydetmeden Kapat\r\n                            </button>\r\n                            <button type=\"button\" disabled={this.state.oneCellModalImagesLength !== 0} data-dismiss=\"modal\" onClick={this.closeAndSaveOneCellModal} class=\"btn btn-primary btn-multiple-input\">\r\n                                {this.renderCompleteButtonContentOneCell()}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    /* COSMETICS NOTES ONE CELL INPUT MODAL METHODS ENDS */\r\n\r\n    /* COSMETICS NOTES MULTIPLE CELL INPUT MODAL METHODS ENDS */\r\n    renderMultipleCellModalOpener() {\r\n        return <button\r\n            type=\"button\"\r\n            class=\"btn btn-primary\"\r\n            style={{ display: \"none\" }}\r\n            ref={(modalOpener) => {\r\n                this._multipleModalOpener = modalOpener\r\n            }}\r\n            data-toggle=\"modal\"\r\n            data-backdrop='static'\r\n            data-keyboard='false'\r\n            data-target=\"#cosmeticsMultipleInputModal\">\r\n            Open modal for @mdo\r\n        </button>\r\n    }\r\n    onSelectChangeMultipleCellModal = (e) => {\r\n        this.setState({\r\n            multipleCellModalSelectValue: e.target.value\r\n        })\r\n    }\r\n    renderOptionsMultipleCellModal() {\r\n        const value = this.state.cosmeticsNotes[this.state.type]?.find((element, index) => {\r\n            if (element?.id === this.state.updateCellsModalId) {\r\n                return true\r\n            }\r\n            return false;\r\n        })\r\n        return (\r\n            this.cosmeticTypes.map((item, index) => {\r\n                return <option\r\n                    value={item}\r\n                    selected={item === value?.problemType}>\r\n                    {item}\r\n                </option>\r\n            })\r\n        )\r\n    }\r\n\r\n    closeWithoutSaveMultipleCellModal = (e) => {\r\n        this.setState({\r\n            multipleCellModalSelectValue: this.cosmeticTypes[0],\r\n            multipleCellModalTextValue: \"\",\r\n            multipleCellModalImages: [],\r\n            multipleCellDeleteImage: [],\r\n            multipleCheckSum: this.multipleResetData()\r\n        }, () => {\r\n            this._multipleCellModalFileInput.value = null\r\n        })\r\n    }\r\n    closeAndSaveMultipleCellModal = (e) => {\r\n        const arr = Object.keys(this.state.multipleCheckSum?.[this.state?.type]).map((code, index) => {\r\n            const problemType = this.state.cosmetics?.[this.state.type]?.[code]?.problemType\r\n                ? this.mergeCosmetics(\r\n                    this.state.cosmetics?.[this.state.type]?.[code]?.problemType,\r\n                    this.state.multipleCellModalSelectValue\r\n                )\r\n                : this.state.multipleCellModalSelectValue;\r\n            return {\r\n                code,\r\n                problemType,\r\n                problem: this.state.multipleCellModalTextValue,\r\n                problemTypes: (this.state.cosmetics[this.state.type]?.[code]?.problemTypes || []).concat(this.state.multipleCellModalSelectValue)\r\n            }\r\n        });\r\n        const obj = {\r\n\r\n        }\r\n        const codes = []\r\n        arr.forEach((item, index) => {\r\n            codes.push(item?.code)\r\n            obj[item?.code] = {\r\n                ...item\r\n            }\r\n            console.log(obj);\r\n        })\r\n        this.setState(state => ({\r\n            cosmetics: {\r\n                ...state?.cosmetics,\r\n                [this.state.type]: {\r\n                    ...state.cosmetics[this.state.type],\r\n                    ...obj\r\n                }\r\n            },\r\n            cosmeticsNotes: {\r\n                ...state?.cosmeticsNotes,\r\n                [this.state.type]: [\r\n                    ...state?.cosmeticsNotes[this.state.type],\r\n                    {\r\n                        id: this.randomIdGenerator(10),\r\n                        sort: this.state.cosmeticsNotes[this.state.type].length,\r\n                        codes: codes.sort(),\r\n                        problemType: this.state.multipleCellModalSelectValue,\r\n                        problem: this.state.multipleCellModalTextValue,\r\n                        images: this.state.multipleCellModalImages\r\n                    }\r\n                ]\r\n\r\n            },\r\n            multipleCellModalSelectValue: this.cosmeticTypes[0],\r\n            multipleCellModalTextValue: \"\",\r\n            multipleCellModalImages: [],\r\n            multipleCellDeleteImage: []\r\n        }), () => {\r\n            this._multipleCellModalSelect.value = this.cosmeticTypes[0]\r\n            this._multipleCellModalTextArea.value = this.state.multipleCellModalTextValue\r\n            this._multipleCellModalFileInput.value = null\r\n            this.saveLatestStateToLocalStorage()\r\n        })\r\n    }\r\n\r\n    fileUploadHandlerMultipleCellModal = (e) => {\r\n        this.setState({\r\n            multipleCellModalImagesLength: e.target.files.length\r\n        }, () => {\r\n            const context = this;\r\n            [].forEach.call(e.target.files, (file, index) => {\r\n                aws.s3.uploadFile(file)\r\n                    .then(fileResult => {\r\n                        context.setState(state => ({\r\n                            multipleCellModalImagesLength: state.multipleCellModalImagesLength - 1,\r\n                            multipleCellModalImages: state.multipleCellModalImages.concat(`https://report.xprcsv.net/public/${fileResult?.key}`)\r\n                        }))\r\n                    })\r\n                    .catch(err => {\r\n                        console.error(err)\r\n                    })\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    renderCompleteButtonContentMultipleCell() {\r\n        return (\r\n            this.state.multipleCellModalImagesLength === 0\r\n                ? (<span>Kaydet ve Kapat</span>)\r\n                : (\r\n                    <div class=\"justify-content-center align-items-center\">\r\n                        <img src=\"https://c.tenor.com/I6kN-6X7nhAAAAAj/loading-buffering.gif\" height=\"23px\" width=\"23px\" />\r\n                    </div>\r\n                )\r\n        )\r\n    }\r\n\r\n    multipleCellDeleteImage = (e, index) => {\r\n        const multipleCellModalImages = Array.from(this.state.multipleCellModalImages) || [];\r\n        let deletedImage = multipleCellModalImages.splice(index, 1)\r\n        const arr = Array.from(deletedImage);\r\n        this.setState(state => ({\r\n            multipleCellModalImages: multipleCellModalImages,\r\n            multipleCellModalDeletedImages: (this.state?.multipleCellModalDeletedImages || []).concat(arr)\r\n        }), () => {\r\n            //alert(JSON.stringify(this.state.updateCellsModalDeletedImages))\r\n        })\r\n    }\r\n\r\n    renderMultipleCellImagesContainer() {\r\n        return (this.state?.multipleCellModalImages || []).map((item, index) => {\r\n            return <div style={{\r\n                display: \"inline-block\",\r\n                height: \"230px\",\r\n                width: \"150px\",\r\n                margin: \"10px\",\r\n            }}>\r\n                <img src={item} loading=\"lazy\" style={{\r\n                    objectFit: \"cover\",\r\n                    whiteSpace: \"normal\",\r\n                    border: \"3px solid black\"\r\n                }} width=\"150px\" height=\"150px\" alt=\"Image\" resizeMethod=\"cover\" />\r\n                <div style={{ height: \"38px\", marginTop: \"4px\" }}>\r\n                    <button\r\n                        class=\"btn btn-primary\"\r\n                        onClick={(e) => {\r\n                            this.multipleCellDeleteImage(e, index)\r\n                        }}\r\n                        style={{\r\n                            backgroundColor: globalStyles.red,\r\n                            borderColor: globalStyles.red,\r\n                            color: globalStyles.white,\r\n                            fontSize: \"16px\",\r\n                            textAlign: \"center\",\r\n                            verticalAlign: \"center\",\r\n                            height: \"38px\",\r\n                            width: '100%'\r\n                        }}>\r\n                        Resimi Sil &times;\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        })\r\n    }\r\n    renderMultipleCellModal() {\r\n        return (\r\n            <div class=\"modal fade\" id=\"cosmeticsMultipleInputModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"cosmeticsMultipleInputModal\" aria-hidden=\"true\">\r\n                {this.renderMultipleCellModalOpener()}\r\n                <div class=\"modal-dialog\" role=\"document\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h5 class=\"modal-title\"\r\n                                id=\"exampleMultipleModalLabel\"\r\n                                style={{\r\n                                    fontWeight: \"bold\"\r\n                                }}>{this.cosmeticLayerTypes[this.state?.type]} - {Object.keys(this.state?.multipleCheckSum?.[this.state?.type] || {}).map((item, index) => { return item }).join(\" \")} numaralı katmanlar için giriliyor</h5>\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={this.closeWithoutSaveMultipleCellModal}\r\n                                class=\"close\"\r\n                                data-dismiss=\"modal\"\r\n                                aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <form>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"recipient-name\" class=\"col-form-label\">Deformasyon Tipi:</label>\r\n                                    <select type=\"text\"\r\n                                        ref={(select) => {\r\n                                            this._multipleCellModalSelect = select\r\n                                        }}\r\n                                        onLoad={this.onSelectChangeMultipleCellModal}\r\n                                        onChange={this.onSelectChangeMultipleCellModal}\r\n                                        class=\"form-control\"\r\n                                        id=\"multipleModalSelect\">\r\n                                        {this.renderOptionsMultipleCellModal()}\r\n                                    </select>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"message-text\" class=\"col-form-label\">Deformasyon Açıklaması:</label>\r\n                                    <textarea\r\n                                        class=\"form-control\"\r\n                                        id=\"multipleModalTextArea\"\r\n                                        rows=\"6\"\r\n                                        placeholder=\"Bu alanla ilgili bir açıklama girebilirsiniz\"\r\n                                        ref={e => {\r\n                                            this._multipleCellModalTextArea = e;\r\n                                        }}\r\n                                        onKeyUp={(e) => {\r\n                                            this.setState({\r\n                                                multipleCellModalTextValue: e.target.value\r\n                                            })\r\n                                        }}\r\n                                        defaultValue={this.state.multipleCellModalTextValue}>\r\n                                    </textarea>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <div class=\"scroll-hidden\" style={{\r\n                                        overflowY: \"hidden\",\r\n                                        overflowX: \"scroll !important\",\r\n                                        maxHeight: \"230px\",\r\n                                        width: '100%',\r\n                                        whiteSpace: \"nowrap\"\r\n                                    }}>\r\n                                        {this.renderMultipleCellImagesContainer()}\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <input type=\"file\" ref={(fileInput) => {\r\n                                        this._multipleCellModalFileInput = fileInput;\r\n                                    }}\r\n                                        multiple\r\n                                        onChange={this.fileUploadHandlerMultipleCellModal}\r\n                                        accept='image/*' />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\"\r\n                                class=\"btn btn-secondary\"\r\n                                onClick={this.closeWithoutSaveMultipleCellModal}\r\n                                data-dismiss=\"modal\">Kaydetmeden Kapat</button>\r\n                            <button\r\n                                type=\"button\"\r\n                                data-dismiss=\"modal\"\r\n                                disabled={this.state.multipleCellModalImagesLength !== 0}\r\n                                style={{\r\n                                    minWidth: \"120px\",\r\n                                    height: \"38px\"\r\n                                }}\r\n                                onClick={this.closeAndSaveMultipleCellModal}\r\n                                class=\"btn btn-primary btn-multiple-input\">\r\n                                {this.renderCompleteButtonContentMultipleCell()}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n    /* COSMETICS NOTES MULTIPLE CELL INPUT MODAL METHODS ENDS */\r\n\r\n    /* COSMETICS NOTES UPDATE MODAL METHODS */\r\n    renderUpdateCellsModalOpener() {\r\n        return <button type=\"button\"\r\n            class=\"btn btn-primary\"\r\n            style={{ display: \"none\" }}\r\n            ref={(modalOpener) => {\r\n                this._updateCellsModalOpener = modalOpener\r\n            }}\r\n            data-toggle=\"modal\"\r\n            data-backdrop='static'\r\n            data-keyboard='false'\r\n            data-target=\"#updateModal\">Open modal for @mdo</button>\r\n    }\r\n    onSelectChangeUpdateCellsModal = (e) => {\r\n        this.setState({\r\n            updateCellsModalSelectValue: e.target.value\r\n        })\r\n    }\r\n    renderOptionsUpdateCellsModal() {\r\n        return this.cosmeticTypes.map((item, index) => {\r\n            return <option value={item} selected={this.state.updateCellsModalSelectValue === item}>{item}</option>\r\n        });\r\n    }\r\n    closeWithoutSaveUpdateCellsModal = (e) => {\r\n        this.setState(state => ({\r\n            type: \"\",\r\n            updateCellsModalDataIndex: 0,\r\n            updateCellsModalId: \"\",\r\n            updateCellsModalSelectValue: this.cosmeticTypes[0],\r\n            updateCellsModalOldSelectValue: this.cosmeticTypes[0],\r\n            updateCellsModalTextValue: \"\",\r\n            updateCellsModalImages: [],\r\n            updateCellsModalImagesLength: 0,\r\n            updateCellsModalDeletedImages: [],\r\n            updateCellsModalCodes: []\r\n        }), () => {\r\n            this._updateCellsModalFileInput.value = null;\r\n            this._updateCellsModalTextArea.defaultValue = this.state.updateCellsModalTextValue\r\n        })\r\n    }\r\n    closeAndSaveUpdateCellsModal = (e) => {\r\n        (this.state.updateCellsModalDeletedImages || []).forEach((item, index) => {\r\n            aws.s3.removeFile(item.replace(\"https://report.xprcsv.net/public/\", \"\"), { level: \"public\" }).then((res) => {\r\n                console.log(res)\r\n            }).catch((e) => {\r\n                console.error(e)\r\n            });\r\n        })\r\n        const oldProblemType = this.state.updateCellsModalOldSelectValue;\r\n        this.setState(state => ({\r\n            cosmeticsNotes: {\r\n                ...state.cosmeticsNotes,\r\n                [this.state.type]: (state.cosmeticsNotes[this.state.type] || []).map((item, index) => {\r\n                    if (index === this.state.updateCellsModalDataIndex) {\r\n                        return {\r\n                            ...item,\r\n                            problemType: this.state.updateCellsModalSelectValue,\r\n                            problem: this.state.updateCellsModalTextValue,\r\n                            images: this.state.updateCellsModalImages\r\n                        }\r\n                    } else {\r\n                        return item\r\n                    }\r\n                })\r\n            },\r\n            cosmetics: {\r\n                ...state?.cosmetics,\r\n                [this.state.type]: {\r\n                    ...state.cosmetics[this.state.type],\r\n                    ...Object.assign({}, ...this.state.updateCellsModalCodes.map((item, index) => {\r\n                        let found = false.valueOf;\r\n                        const problemTypes = (this.state.cosmetics[this.state.type]?.[item]?.problemTypes || []).filter((p, c) => {\r\n                            if (found === true) return true;\r\n                            if (p === oldProblemType) {\r\n                                found = true;\r\n                                return false;\r\n                            }\r\n                            return true;\r\n                        }).concat(this.state.updateCellsModalSelectValue)\r\n                        return {\r\n                            [item]: {\r\n                                ...this.state.cosmetics[this.state.type]?.[item],\r\n                                problemType: this.state.updateCellsModalSelectValue,\r\n                                problem: this.state.updateCellsModalTextValue,\r\n                                problemTypes,\r\n                                images: this.state.updateCellsModalImages\r\n                            }\r\n                        }\r\n                    }))\r\n                }\r\n            },\r\n            type: \"\",\r\n            updateCellsModalDataIndex: 0,\r\n            updateCellsModalId: \"\",\r\n            updateCellsModalSelectValue: this.cosmeticTypes[0],\r\n            updateCellsModalOldSelectValue: this.cosmeticTypes[0],\r\n            updateCellsModalTextValue: \"\",\r\n            updateCellsModalImages: [],\r\n            updateCellsModalDeletedImages: [],\r\n            updateCellsModalCodes: []\r\n        }), () => {\r\n            this._updateCellsModalSelect.value = this.cosmeticTypes[0]\r\n            this._updateCellsModalTextArea.defaultValue = this.state.updateCellsModalTextValue\r\n            this._updateCellsModalFileInput.value = null\r\n            this.updateCosmeticsFromCosmeticNotes()\r\n            this.saveLatestStateToLocalStorage()\r\n        })\r\n    }\r\n    fileUploadHandlerUpdateCellsModal = (e) => {\r\n        this.setState({\r\n            updateCellsModalImagesLength: e.target.files.length\r\n        }, () => {\r\n            const context = this;\r\n            [].forEach.call(e.target.files, (file, index) => {\r\n                aws.s3.uploadFile(file)\r\n                    .then(fileResult => {\r\n                        context.setState(state => ({\r\n                            updateCellsModalImagesLength: this.state.updateCellsModalImagesLength - 1,\r\n                            updateCellsModalImages: this.state.updateCellsModalImages.concat(`https://report.xprcsv.net/public/${fileResult?.key}`)\r\n                        }))\r\n                    })\r\n                    .catch(err => {\r\n                        console.error(err)\r\n                    })\r\n            })\r\n        })\r\n\r\n    }\r\n    renderCompleteButtonContentUpdateCells() {\r\n        return (\r\n            this.state.updateCellsModalImagesLength === 0\r\n                ? (<span>Kaydet ve Kapat</span>)\r\n                : (\r\n                    <div class=\"justify-content-center align-items-center\">\r\n                        <img src=\"https://c.tenor.com/I6kN-6X7nhAAAAAj/loading-buffering.gif\" height=\"23px\" width=\"23px\" />\r\n                    </div>\r\n                )\r\n        )\r\n    }\r\n    updateCellsDeleteImage = (e, index) => {\r\n        const updateCellsModalImages = Array.from(this.state.updateCellsModalImages) || [];\r\n        let deletedImage = updateCellsModalImages.splice(index, 1)\r\n        const arr = Array.from(deletedImage);\r\n        this.setState(state => ({\r\n            updateCellsModalImages: updateCellsModalImages,\r\n            updateCellsModalDeletedImages: (this.state?.updateCellsModalDeletedImages || []).concat(arr)\r\n        }), () => {\r\n            //alert(JSON.stringify(this.state.updateCellsModalDeletedImages))\r\n        })\r\n    }\r\n    renderUpdateCellsImagesContainer() {\r\n        return (this.state?.updateCellsModalImages || []).map((item, index) => {\r\n            return <div style={{\r\n                display: \"inline-block\",\r\n                height: \"230px\",\r\n                width: \"150px\",\r\n                margin: \"10px\",\r\n            }}>\r\n                <img src={item} loading=\"lazy\" style={{\r\n                    objectFit: \"cover\",\r\n                    whiteSpace: \"normal\",\r\n                    border: \"3px solid black\"\r\n                }} width=\"150px\" height=\"150px\" alt=\"Image\" resizeMethod=\"cover\" />\r\n                <div style={{ height: \"38px\", marginTop: \"4px\" }}>\r\n                    <button\r\n                        class=\"btn btn-primary\"\r\n                        onClick={(e) => {\r\n                            this.updateCellsDeleteImage(e, index)\r\n                        }}\r\n                        style={{\r\n                            backgroundColor: globalStyles.red,\r\n                            borderColor: globalStyles.red,\r\n                            color: globalStyles.white,\r\n                            fontSize: \"16px\",\r\n                            textAlign: \"center\",\r\n                            verticalAlign: \"center\",\r\n                            height: \"38px\",\r\n                            width: '100%'\r\n                        }}>\r\n                        Resimi Sil &times;\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        })\r\n    }\r\n    renderUpdateCellsModal() {\r\n        return (\r\n            <div class=\"modal fade\" id=\"updateModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"updateModal\" aria-hidden=\"true\">\r\n                {this.renderUpdateCellsModalOpener()}\r\n                <div class=\"modal-dialog\" role=\"document\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h5 class=\"modal-title\"\r\n                                id=\"updateModalLabel\"\r\n                                style={{\r\n                                    fontWeight: \"bold\"\r\n                                }}>\r\n                                {this.state.updateCellsModalId} İlgili Alan Düzenleniyor\r\n                            </h5>\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={this.closeWithoutSaveUpdateCellsModal}\r\n                                class=\"close\"\r\n                                data-dismiss=\"modal\"\r\n                                aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"recipient-name\" class=\"col-form-label\">Deformasyon Tipi:</label>\r\n                                <select type=\"text\"\r\n                                    ref={(select) => {\r\n                                        this._updateCellsModalSelect = select\r\n                                    }}\r\n                                    defaultChecked={this.state.updateCellsModalSelectValue}\r\n                                    onLoad={this.onSelectChangeUpdateCellsModal}\r\n                                    onChange={this.onSelectChangeUpdateCellsModal}\r\n                                    class=\"form-control\"\r\n                                    id=\"multipleModalSelect\">\r\n                                    {this.renderOptionsMultipleCellModal()}\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"message-text\" class=\"col-form-label\">Deformasyon Açıklaması:</label>\r\n                                <textarea\r\n                                    class=\"form-control\"\r\n                                    id=\"multipleModalTextArea\"\r\n                                    rows=\"6\"\r\n                                    placeholder=\"Bu alanla ilgili bir açıklama girebilirsiniz\"\r\n                                    ref={textarea => {\r\n                                        this._updateCellsModalTextArea = textarea;\r\n                                    }}\r\n                                    onKeyUp={(e) => {\r\n                                        this.setState({\r\n                                            updateCellsModalTextValue: e.target.value\r\n                                        })\r\n                                    }}\r\n                                    defaultValue={this.state.updateCellsModalTextValue}>\r\n                                </textarea>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <div class=\"scroll-hidden\" style={{\r\n                                    overflowY: \"hidden\",\r\n                                    overflowX: \"scroll !important\",\r\n                                    maxHeight: \"230px\",\r\n                                    width: '100%',\r\n                                    whiteSpace: \"nowrap\"\r\n                                }}>\r\n                                    {this.renderUpdateCellsImagesContainer()}\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"file\" ref={(fileInput) => {\r\n                                    this._updateCellsModalFileInput = fileInput;\r\n                                }}\r\n                                    multiple\r\n                                    onChange={this.fileUploadHandlerUpdateCellsModal}\r\n                                    accept='image/*' />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\"\r\n                                class=\"btn btn-secondary\"\r\n                                onClick={this.closeWithoutSaveUpdateCellsModal}\r\n                                data-dismiss=\"modal\">Kaydetmeden Kapat</button>\r\n                            <button\r\n                                type=\"button\"\r\n                                data-dismiss=\"modal\"\r\n                                disabled={this.state.updateCellsModalImagesLength !== 0}\r\n                                style={{\r\n                                    minWidth: \"120px\",\r\n                                    height: \"38px\"\r\n                                }}\r\n                                onClick={this.closeAndSaveUpdateCellsModal}\r\n                                class=\"btn btn-primary btn-multiple-input\">\r\n                                {this.renderCompleteButtonContentUpdateCells()}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n    //COSMETICS NOTES UPDATE MODAL METHODS ENDS\r\n    renderCoordinates(type, code) {\r\n        const disabled = this.state.cosmetics?.[type]?.[code]?.problemType\r\n            ? this.state.multipleSelectionMode === true\r\n                ? false\r\n                : true\r\n            : false\r\n        return <button\r\n            class=\"button-picker\"\r\n            onClick={() => {\r\n                if (this.state.multipleSelectionMode) {\r\n                    if (this.state.multiple?.[type]?.[code] === true) {\r\n                        const obj = {\r\n                            ...this.state?.multiple?.[type],\r\n                            [code]: undefined\r\n                        }\r\n                        delete obj?.[code]\r\n                        this.setState(state => ({\r\n                            multiple: {\r\n                                ...state?.multiple,\r\n                                [type]: obj\r\n                            },\r\n                            type: type\r\n                        }), () => {\r\n                        })\r\n                    } else {\r\n                        this.setState(state => ({\r\n                            multiple: {\r\n                                ...state?.multiple,\r\n                                [type]: {\r\n                                    ...state?.multiple?.[type],\r\n                                    [code]: true\r\n                                }\r\n                            },\r\n                            type: type\r\n\r\n                        }), () => {\r\n                        })\r\n                    }\r\n\r\n                } else {\r\n                    this.setState({ type, code }, () => {\r\n                        this.setState({\r\n                            oneCellModalTextValue: this.state.cosmetics[type]?.[code]?.problem || \"\",\r\n                            oneCellModalSelectValue: this.state.cosmetics[type]?.[code]?.problemType || this.cosmeticTypes[0]\r\n                        }, () => {\r\n                            this._oneCellModalTextArea.value = this.state.oneCellModalTextValue\r\n                            this._oneCellModalOpener.click()\r\n                        })\r\n                    })\r\n                }\r\n            }}\r\n            style={{\r\n                background: \"white\",\r\n                background: (this.state.cosmetics?.[type]?.[code]?.problemType || this.state.multipleCheckSum?.[type]?.[code])\r\n                    ? this.state.cosmetics?.[type]?.[code]?.problemType\r\n                        ? this.state.multipleSelectionMode\r\n                            ? \"lightgray\"\r\n                            : this.cosmeticTypesColors[this.state.cosmetics?.[type]?.[code]?.problemType]\r\n                        : this.cosmeticTypesColors[this.state.cosmetics?.[type]?.[code]?.problemType]\r\n                    : this.state.multipleSelectionMode\r\n                        ? this.state.multiple?.[type]?.[code]\r\n                            ? \"lightgray\"\r\n                            : \"white\"\r\n                        : \"white\",\r\n                width: \"39px\",\r\n                height: \"39px\",\r\n                border: \"0.5px solid black\",\r\n                outline: \"none\",\r\n                fontWeight: \"bold\",\r\n                fontSize: \"15px\",\r\n                cursor: \"pointer\"\r\n            }}\r\n            disabled={disabled}>\r\n        </button >\r\n\r\n    }\r\n\r\n    renderCosmeticNotes({ type }) {\r\n        return (\r\n            <div style={{ fontWeight: \"bold\", backgroundColor: \"lightgrey\" }}>\r\n                {\r\n                    (this.state.cosmeticsNotes?.[type] || []).map((item, index) => {\r\n                        return <div style={{\r\n                            paddingTop: \"30px\",\r\n                            paddingBottom: \"30px\",\r\n                            backgroundColor: globalStyles.white,\r\n                            borderBottom: \"2px solid lightgrey\"\r\n                        }}>\r\n                            <div style={{ display: \"inline-block\" }}>{`ID: ${item?.id}`}\r\n                                <button\r\n                                    onClick={(e) => {\r\n                                        const index = this.state.cosmeticsNotes?.[type].findIndex((currentElement) => {\r\n                                            return currentElement?.id === item?.id\r\n                                        })\r\n                                        this.setState({\r\n                                            type,\r\n                                            updateCellsModalCodes: item?.codes,\r\n                                            updateCellsModalDataIndex: index,\r\n                                            updateCellsModalId: item?.id,\r\n                                            updateCellsModalSelectValue: item?.problemType,\r\n                                            updateCellsModalOldSelectValue: item?.problemType,\r\n                                            updateCellsModalTextValue: item?.problem,\r\n                                            updateCellsModalImages: item?.images || [],\r\n                                            updateCellsModalImagesLength: 0\r\n                                        }, () => {\r\n                                            this._updateCellsModalOpener.click()\r\n                                        })\r\n                                    }}\r\n                                    class=\"btn btn-secondary\"\r\n                                    style={{\r\n                                        backgroundColor: globalStyles.bartyGreen,\r\n                                        borderColor: globalStyles.bartyGreen,\r\n                                        marginLeft: \"20px\",\r\n                                        color: globalStyles.bartyDark,\r\n                                        fontWeight: \"bold\"\r\n                                    }}>\r\n                                    Düzenle\r\n                                </button>\r\n                                <button\r\n                                    onClick={(e) => {\r\n                                        const index = this.state.cosmeticsNotes?.[type].findIndex((currentElement) => {\r\n                                            return currentElement?.id === item?.id\r\n                                        })\r\n                                        const data = this.state.cosmeticsNotes?.[type].find((currentElement) => {\r\n                                            return currentElement?.id === item?.id\r\n                                        })\r\n                                        let obj = {};\r\n                                        data?.codes.forEach((key, index) => {\r\n                                            if ((this.state?.cosmetics?.[type]?.[key]?.problemTypes || []).length < 2) {\r\n                                                delete this.state?.cosmetics?.[type]?.[key];\r\n                                            } else {\r\n                                                console.log(\"Working\")\r\n                                                const problemIndex = this.state?.cosmetics?.[type]?.[key]?.problemTypes.indexOf();\r\n                                                let arr = Array.from(this.state?.cosmetics?.[type]?.[key]?.problemTypes);\r\n                                                console.log(arr);\r\n                                                arr.splice(problemIndex, 1);\r\n                                                console.log(arr);\r\n                                                const firstElement = arr[0];\r\n                                                let problemType = \"\";\r\n                                                if (arr.length === 1) {\r\n                                                    problemType = firstElement\r\n                                                } else {\r\n                                                    arr.slice(1).forEach((problem, index) => {\r\n                                                        if (index === 0) {\r\n                                                            problemType = this.mergeCosmetics(firstElement, problem)\r\n                                                        } else {\r\n                                                            problemType = this.mergeCosmetics(problemType, problem)\r\n                                                        }\r\n                                                    })\r\n                                                }\r\n                                                console.log(problemType);\r\n                                                obj = {\r\n                                                    [key]: {\r\n                                                        ...this.state?.cosmetics?.[type]?.[key],\r\n                                                        problemType,\r\n                                                        problemTypes: arr\r\n                                                    }\r\n                                                }\r\n                                                console.log(obj)\r\n                                            }\r\n                                        })\r\n                                        this.setState(state => ({\r\n                                            cosmetics: {\r\n                                                ...state?.cosmetics,\r\n                                                [type]: {\r\n                                                    ...this.state?.cosmetics?.[type],\r\n                                                    ...obj\r\n                                                }\r\n                                            },\r\n                                            cosmeticsNotes: {\r\n                                                ...state.cosmeticsNotes,\r\n                                                [type]: (state.cosmeticsNotes?.[type] || []).filter((item, i) => {\r\n                                                    if (i === index) {\r\n                                                        return false\r\n                                                    } else {\r\n                                                        return true\r\n                                                    }\r\n                                                })\r\n                                            }\r\n\r\n                                        }))\r\n                                    }}\r\n                                    class=\"btn btn-danger\"\r\n                                    style={{\r\n                                        backgroundColor: globalStyles.red,\r\n                                        borderColor: globalStyles.red,\r\n                                        marginLeft: \"5px\",\r\n                                        minWidth: \"50px\",\r\n                                        color: globalStyles.white,\r\n                                        fontWeight: \"bold\"\r\n                                    }}>\r\n                                    <i class=\"fa fa-trash\"></i>\r\n                                </button>\r\n                            </div>\r\n                            <div>{`${(item?.codes || []).map((c, i) => { return c + \" \" })} kordinatlarında:`}</div>\r\n                            <div>{`Problem: ${item?.problemType}`}</div>\r\n                            <div>{`Expertiz Mesajı: ${item?.problem}`}</div>\r\n                            <div>{`Resimler:\\n`}\r\n                                {(item?.images || []).length === 0 && \"Resim Eklenmedi\"}\r\n                                {(item?.images || []).map((item, index) => {\r\n                                    return <span style={{ padding: 10 }}>\r\n                                        <img loading=\"lazy\" role=\"button\"\r\n                                            src={`${item}`}\r\n                                            width=\"150px\"\r\n                                            onClick={(e) => {\r\n                                                this.setState({\r\n                                                    modalImageSrc: `${item}`\r\n                                                })\r\n                                                this._imageModalOpener.click()\r\n                                            }}\r\n                                            height=\"150px\"\r\n                                            style={{\r\n                                                objectFit: \"cover\",\r\n                                                cursor: \"pointer\"\r\n                                            }} />\r\n                                    </span>\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    renderFrontCoordinatePicker() {\r\n        return (\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-3 col-md-6 col-sm-12 col-6\" style={{ maxWidth: \"320px\" }}>\r\n                    <div style={{\r\n                        width: \"280px\",\r\n                        height: \"520px\",\r\n                        marginTop: \"30px\",\r\n                        borderRadius: \"10px\",\r\n                        border: \"3px solid black\",\r\n                        backgroundColor: globalStyles.gray,\r\n                        display: \"grid\",\r\n                        gridTemplateColumns: \"auto auto auto auto auto auto auto\",\r\n                    }}>\r\n                        {Array.from({ length: 91 }, (item, index) => {\r\n                            const chars = \"ABCDEFG\";\r\n                            return this.renderCoordinates(\"front\", `${chars[index % 7]}${parseInt((index / 7) + 1)}`)\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-lg-9 col-md-6 col-sm-12 col-6\" >\r\n                    {this.renderCosmeticNotes({ type: \"front\" })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderBackCoordinatePicker() {\r\n        return (\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-3 col-md-6 col-sm-12 col-6\" style={{ maxWidth: \"320px\" }}>\r\n                    <div style={{\r\n                        width: \"280px\",\r\n                        height: \"520px\",\r\n                        marginTop: \"30px\",\r\n                        borderRadius: \"10px\",\r\n                        border: \"3px solid black\",\r\n                        backgroundColor: globalStyles.gray,\r\n                        display: \"grid\",\r\n                        gridTemplateColumns: \"auto auto auto auto auto auto auto\",\r\n                    }}>\r\n                        {Array.from({ length: 91 }, (item, index) => {\r\n                            const chars = \"ABCDEFG\";\r\n                            return this.renderCoordinates(\"back\", `${chars[index % 7]}${parseInt((index / 7) + 1)}`)\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-lg-9 col-md-6 col-sm-12 col-6\" >\r\n                    {this.renderCosmeticNotes({ type: \"back\" })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderTopCoordinatePicker() {\r\n        return (\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-3 col-md-6 col-sm-12 col-6\" style={{ maxWidth: \"320px\" }}>\r\n                    <div style={{\r\n                        width: \"280px\",\r\n                        height: \"46px\",\r\n                        marginTop: \"30px\",\r\n                        borderRadius: \"10px\",\r\n                        border: \"3px solid black\",\r\n                        backgroundColor: globalStyles.gray,\r\n                        display: \"grid\",\r\n                        gridTemplateColumns: \"auto auto auto auto auto auto auto\",\r\n                    }}>\r\n                        {Array.from({ length: 7 }, (item, index) => {\r\n                            const chars = \"ABCDEFG\";\r\n                            return this.renderCoordinates(\"top\", `${chars[index % 7]}${1}`)\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-lg-9 col-md-6 col-sm-12 col-6\" >\r\n                    {this.renderCosmeticNotes({ type: \"top\" })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderBottomCoordinatePicker() {\r\n        return (\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-3 col-md-6 col-sm-12 col-6\" style={{ maxWidth: \"320px\" }}>\r\n                    <div style={{\r\n                        width: \"280px\",\r\n                        height: \"46px\",\r\n                        marginTop: \"30px\",\r\n                        borderRadius: \"10px\",\r\n                        border: \"3px solid black\",\r\n                        backgroundColor: globalStyles.gray,\r\n                        display: \"grid\",\r\n                        gridTemplateColumns: \"auto auto auto auto auto auto auto\",\r\n                    }}>\r\n                        {Array.from({ length: 7 }, (item, index) => {\r\n                            const chars = \"ABCDEFG\";\r\n                            return this.renderCoordinates(\"bottom\", `${chars[index % 7]}${parseInt((index / 7) + 1)}`)\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-lg-9 col-md-6 col-sm-12 col-6\" >\r\n                    {this.renderCosmeticNotes({ type: \"bottom\" })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    renderLeftCoordinatePicker() {\r\n        return (\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-3 col-md-6 col-sm-12 col-6\" style={{ maxWidth: \"320px\" }}>\r\n                    <div style={{\r\n                        margin: \"auto\",\r\n                        width: \"45px\",\r\n                        height: \"526px\",\r\n                        marginTop: \"30px\",\r\n                        borderRadius: \"10px\",\r\n                        border: \"3px solid black\",\r\n                        backgroundColor: globalStyles.gray,\r\n                        display: \"grid\",\r\n                        gridTemplateColumns: \"auto\",\r\n                    }}>\r\n                        {Array.from({ length: 13 }, (item, index) => {\r\n                            const chars = \"ABCDEFG\";\r\n                            return this.renderCoordinates(\"left\", `${chars[0]}${parseInt((index % 13) + 1)}`)\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-lg-9 col-md-6 col-sm-12 col-6\" >\r\n                    {this.renderCosmeticNotes({ type: \"left\" })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    renderRightCoordinatePicker() {\r\n        return (\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-3 col-md-6 col-sm-12 col-6\" style={{ maxWidth: \"320px\" }}>\r\n                    <div style={{\r\n                        margin: \"auto\",\r\n                        width: \"45px\",\r\n                        height: \"526px\",\r\n                        marginTop: \"30px\",\r\n                        borderRadius: \"10px\",\r\n                        border: \"3px solid black\",\r\n                        backgroundColor: globalStyles.gray,\r\n                        display: \"grid\",\r\n                        gridTemplateColumns: \"auto\",\r\n                    }}>\r\n                        {Array.from({ length: 13 }, (item, index) => {\r\n                            const chars = \"ABCDEFG\";\r\n                            return this.renderCoordinates(\"right\", `${chars[0]}${parseInt((index % 13) + 1)}`)\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-lg-9 col-md-6 col-sm-12 col-6\" >\r\n                    {this.renderCosmeticNotes({ type: \"right\" })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    renderCleanActionButton() {\r\n        return (\r\n            <div style={{\r\n                position: \"fixed\",\r\n                right: \"30px\",\r\n                bottom: \"30px\",\r\n                backgroundColor: globalStyles.bartyGreen,\r\n                height: \"80px\",\r\n                width: \"80px\",\r\n                borderRadius: \"40px\"\r\n            }}>\r\n                <button style={{\r\n                    color: globalStyles.bartyDark,\r\n                    backgroundColor: \"transparent\",\r\n                    outline: \"none\",\r\n                    border: \"none\",\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    margin: \"auto\",\r\n                    fontFamily: \"'Rubik',sans-serif\",\r\n                    cursor: \"pointer\",\r\n                    flex: 1,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\"\r\n                }} onClick={(e) => {\r\n                    this.cleanState()\r\n                }}>\r\n                    <i class=\"fa fa-trash fa-2x\"></i>\r\n                </button>\r\n            </div>)\r\n    }\r\n    renderGeneralRadioButtons(title, stateId, callback = () => { }) {\r\n        return (\r\n            <div class=\"row\"\r\n                style={{\r\n                    height: \"80px\",\r\n                    marginTop: \"5px\",\r\n                    marginBottom: \"25px\"\r\n                }}>\r\n                <div class=\"col-lg-5 col-12\"\r\n                    style={{\r\n                        margin: \"auto\"\r\n                    }}>\r\n                    <div style={{\r\n                        textAlign: \"left\",\r\n                        flex: 1,\r\n                        fontWeight: \"bold\",\r\n                    }}>\r\n                        {title || \"\"}\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-lg-7 col-12\" style={{\r\n                    textAlign: \"left\",\r\n                    height: \"100%\",\r\n                    alignItems: \"center\",\r\n                    display: \"flex\",\r\n                    flex: 1\r\n                }}>\r\n                    <div>\r\n                        <div class=\"form-check form-check-inline\"\r\n                            style={{\r\n                                marginRight: \"30px\",\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\",\r\n                                padding: \"20px\"\r\n                            }}>\r\n                            <input class=\"form-check-input\"\r\n                                type=\"radio\"\r\n                                ref={(positive) => {\r\n                                    this._positiveInputGeneral = positive\r\n                                }}\r\n                                name={stateId}\r\n                                defaultChecked={\r\n                                    this.state.general?.[stateId]\r\n                                        ? this.state.general?.[stateId]\r\n                                        : null\r\n                                }\r\n                                onChange={(e) => {\r\n                                    if (this.state.general[stateId] !== true) {\r\n                                        this.setState((state) => ({\r\n                                            general: {\r\n                                                ...state?.general,\r\n                                                [stateId]: true\r\n                                            }\r\n                                        }), callback);\r\n                                    }\r\n                                }}\r\n                                checked={\r\n                                    this.state.general[stateId] !== undefined\r\n                                    && this.state.general[stateId] !== null\r\n                                    && this.state.general[stateId] !== false\r\n                                }\r\n                            />\r\n                            <label class=\"form-check-label\" style={{\r\n                                fontWeight: \"bold\"\r\n                            }} for=\"flexCheckDefault\">\r\n                                Var\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\" style={{\r\n                            marginRight: \"30px\"\r\n                        }}>\r\n                            <input class=\"form-check-input\"\r\n                                type=\"radio\"\r\n                                ref={(negative) => {\r\n                                    this._negativeInputGeneral = negative\r\n                                }}\r\n                                name={stateId}\r\n                                defaultChecked={\r\n                                    this.state.general?.[stateId] === false\r\n                                        ? true\r\n                                        : null\r\n                                }\r\n                                onChange={(e) => {\r\n                                    if (this.state.general[stateId] !== false) {\r\n                                        this.setState((state) => ({\r\n                                            general: {\r\n                                                ...state?.general,\r\n                                                [stateId]: false\r\n                                            }\r\n                                        }), callback);\r\n                                    }\r\n                                }}\r\n                                checked={\r\n                                    this.state.general[stateId] !== undefined\r\n                                    && this.state.general[stateId] !== null\r\n                                    && this.state.general[stateId] !== true\r\n                                }\r\n                            />\r\n                            <label class=\"form-check-label\" style={{\r\n                                fontWeight: \"bold\"\r\n                            }} for=\"flexCheckDefault\">\r\n                                Yok\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    renderGeneralInformationCollector() {\r\n        return <div class=\"row\" style={{ padding: \"10px 20px 10px 20px\" }}>\r\n            <div class=\"col-12\">\r\n                <label for=\"email\" style={{\r\n                    fontFamily: \"'Rubik',sans-serif\",\r\n                    marginTop: \"30px\"\r\n                }}>Kullanıcının Email'i</label>\r\n                <input\r\n                    defaultValue={this.state.general?.email}\r\n                    ref={(model) => {\r\n                        this._email = model\r\n                    }}\r\n                    id=\"email\"\r\n                    type=\"text\"\r\n                    style={{\r\n                        width: '100%',\r\n                        height: \"45px\",\r\n                        padding: \"0px 10px 0px 10px\",\r\n                        fontWeight: \"bold\",\r\n                    }}\r\n                    onBlur={(e) => {\r\n                        this.saveLatestStateToLocalStorage()\r\n                    }}\r\n                    onChange={(e) => {\r\n                        this.setState(state => ({\r\n                            general: {\r\n                                ...state?.general,\r\n                                email: e.target.value\r\n                            }\r\n                        }), () => {\r\n                            console.log(this.state.general)\r\n\r\n                        })\r\n                    }}\r\n                    name=\"email\"\r\n                    placeholder=\"Bu alana kullanıcının emailini girebilirsin / Rapor Gönderilecek\"\r\n                />\r\n                <label for=\"telephone\" style={{\r\n                    fontFamily: \"'Rubik',sans-serif\",\r\n                    marginTop: \"30px\"\r\n                }}>Kullanıcının Telefon Numarası</label>\r\n                <input\r\n                    defaultValue={this.state.general?.telephone}\r\n                    ref={(model) => {\r\n                        this._telephone = model\r\n                    }}\r\n                    id=\"telephone\"\r\n                    type=\"text\"\r\n                    style={{\r\n                        width: '100%',\r\n                        height: \"45px\",\r\n                        padding: \"0px 10px 0px 10px\",\r\n                        fontWeight: \"bold\",\r\n                    }}\r\n                    onBlur={(e) => {\r\n                        this.saveLatestStateToLocalStorage()\r\n                    }}\r\n                    onChange={(e) => {\r\n                        this.setState(state => ({\r\n                            general: {\r\n                                ...state?.general,\r\n                                telephone: e.target.value\r\n                            }\r\n                        }), () => {\r\n                            console.log(this.state.general)\r\n\r\n                        })\r\n                    }}\r\n                    name=\"telephone\"\r\n                    placeholder=\"Bu alana kullanıcının emailini girebilirsin / Rapor Gönderilecek\"\r\n                />\r\n                <label for=\"model\" style={{\r\n                    fontFamily: \"'Rubik',sans-serif\",\r\n                    marginTop: \"30px\"\r\n                }}>Telefonun Modeli</label>\r\n                <input\r\n                    defaultValue={this.state.general?.model}\r\n                    ref={(model) => {\r\n                        this._generalModel = model\r\n                    }}\r\n                    id=\"model\"\r\n                    type=\"text\"\r\n                    style={{\r\n                        width: '100%',\r\n                        height: \"45px\",\r\n                        padding: \"0px 10px 0px 10px\",\r\n                        fontWeight: \"bold\",\r\n                    }}\r\n                    onBlur={(e) => {\r\n                        this.saveLatestStateToLocalStorage()\r\n                    }}\r\n                    onChange={(e) => {\r\n                        this.setState(state => ({\r\n                            general: {\r\n                                ...state?.general,\r\n                                model: e.target.value\r\n                            }\r\n                        }), () => {\r\n                            console.log(this.state.general)\r\n\r\n                        })\r\n                    }}\r\n                    name=\"model\"\r\n                    placeholder=\"Bu alana telefonun modelini girebilirsin\"\r\n                />\r\n                <label for=\"brand\" style={{\r\n                    fontFamily: \"'Rubik',sans-serif\",\r\n                    marginTop: \"30px\"\r\n                }}>Telefonun Markası</label>\r\n                <input\r\n                    defaultValue={this.state.general?.brand}\r\n                    id=\"brand\"\r\n                    type=\"text\"\r\n                    ref={(brand) => {\r\n                        this._generalBrand = brand\r\n                    }}\r\n                    style={{\r\n                        width: '100%',\r\n                        height: \"45px\",\r\n                        padding: \"0px 10px 0px 10px\",\r\n                        fontWeight: \"bold\"\r\n                    }}\r\n                    onBlur={(e) => {\r\n                        this.saveLatestStateToLocalStorage()\r\n                    }}\r\n                    onChange={(e) => {\r\n                        this.setState(state => ({\r\n                            general: {\r\n                                ...state?.general,\r\n                                brand: e.target.value\r\n                            }\r\n                        }), () => {\r\n                            console.log(this.state.general)\r\n                        })\r\n                    }}\r\n                    name=\"brand\"\r\n                    placeholder=\"Bu alana telefonun modelini girebilirsin\"\r\n                />\r\n                {this.renderGeneralRadioButtons(\"Fatura var mı?\", \"bill\")}\r\n                {this.renderGeneralRadioButtons(\"Kutu var mı?\", \"box\")}\r\n                <label for=\"guarantee\"\r\n                    style={{\r\n                        fontFamily: \"'Rubik',sans-serif\",\r\n                    }}>\r\n                    Garanti Süresi\r\n                </label>\r\n                <input\r\n                    defaultValue={this.state.general?.guarentee}\r\n                    id=\"guarantee\"\r\n                    type=\"text\"\r\n                    ref={(guarentee) => {\r\n                        this._generalGuarantee = guarentee\r\n                    }}\r\n                    style={{\r\n                        width: '100%',\r\n                        height: \"45px\",\r\n                        padding: \"0px 10px 0px 10px\",\r\n                        fontWeight: \"bold\"\r\n                    }}\r\n                    onBlur={(e) => {\r\n                        this.saveLatestStateToLocalStorage()\r\n                    }}\r\n                    onChange={(e) => {\r\n                        this.setState(state => ({\r\n                            general: {\r\n                                ...state?.general,\r\n                                guarentee: e.target.value\r\n                            }\r\n                        }), () => {\r\n                            console.log(this.state.general)\r\n                        })\r\n                    }}\r\n                    name=\"guarantee\"\r\n                    placeholder=\"Bu alana telefonun kalan garanti süresini yazabilirsin\"\r\n                />\r\n\r\n            </div>\r\n        </div>\r\n    }\r\n    /* IMAGE MODAL STARTS */\r\n    renderModalImageButton() {\r\n        return <button type=\"button\" class=\"btn btn-primary\" style={{ display: \"none\" }} ref={(modalOpener) => {\r\n            this._imageModalOpener = modalOpener\r\n        }}\r\n            data-toggle=\"modal\"\r\n            data-backdrop='static'\r\n            data-keyboard='false'\r\n            data-target=\"#modal1\">Open modal for @mdo</button>\r\n    }\r\n    renderModalImage() {\r\n        return (\r\n            <div class=\"modal fade\" id=\"modal1\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n                <div class=\"modal-dialog modal-md\">\r\n\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header justify-content-end align-items-end\">\r\n                            <h5 class=\"modal-title\" id=\"exampleMultipleModalLabel\">Resim</h5>\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={() => {\r\n                                    this._imageModalOpener.click()\r\n                                }}\r\n                                class=\"close\"\r\n                                data-dismiss=\"modal\"\r\n                                aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n\r\n                            <img src={this.state.modalImageSrc} width=\"100%\" height=\"auto\" style={{\r\n                                objectFit: \"contain\",\r\n                                width: \"100%\",\r\n                                height: \"auto\"\r\n                            }} />\r\n\r\n                        </div>\r\n\r\n                        <div class=\"modal-footer\">\r\n                            <button\r\n                                type=\"button\"\r\n                                data-dismiss=\"modal1\"\r\n                                onClick={() => {\r\n                                    this._imageModalOpener.click()\r\n                                }}\r\n                                class=\"btn btn-primary\">Resimi Kapat</button>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    /* IMAGE MODAL ENDS */\r\n    renderCleanThePartButton(callback = () => {\r\n\r\n    }) {\r\n        return (\r\n            <button class=\"btn btn-primary\"\r\n                onClick={callback}\r\n                style={{\r\n                    borderColor: globalStyles.red,\r\n                    backgroundColor: globalStyles.red,\r\n                    color: globalStyles.white,\r\n                    fontWeight: \"bold\",\r\n                    letterSpacing: -0.52,\r\n                    outline: \"none\"\r\n                }}>\r\n                Buradaki Verileri Temizle\r\n            </button>\r\n        )\r\n    }\r\n    cleanCosmeticsTypeData(type) {\r\n        this.setState(state => ({\r\n            cosmetics: {\r\n                ...state?.cosmetics,\r\n                [type]: this.stateInitial?.cosmetics?.[type]\r\n            },\r\n            cosmeticsNotes: {\r\n                ...state.cosmeticsNotes,\r\n                [type]: this.stateInitial?.cosmeticsNotes?.[type]\r\n            }\r\n        }), this.saveLatestStateToLocalStorage)\r\n    }\r\n    /* FUNCTIONALITY STARTS */\r\n    renderFunctionalitySelectBoxRow({\r\n        title,\r\n        stateId,\r\n        isFirst = false\r\n    }, callback = function () {\r\n        //alert(JSON.stringify(this.state.functionality))\r\n    }) {\r\n        return (\r\n            <div class=\"row\"\r\n                style={{\r\n                    minHeight: \"100px\",\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    borderBottom: \"1.4px solid lightgray\",\r\n                    borderTop: `${isFirst ? 1.4 : 0}px solid lightgray`\r\n                }}>\r\n                <div class=\"col-lg-5 col-12\"\r\n                    style={{\r\n                        pading: \"0px 0px 0px 20px\"\r\n                    }}>\r\n                    <span class=\"d-flex\">\r\n                        <h6 style={{\r\n                            flex: 1,\r\n                            fontSize: \"21px\",\r\n                            fontFamily: \"'Rubik',sans-serif\",\r\n                        }}>\r\n                            {title || \"\"}\r\n                        </h6>\r\n                        <button class=\"btn btn-primary\"\r\n                            onClick={(e) => {\r\n                                this.setState(state => ({\r\n                                    functionality: {\r\n                                        ...state.functionality,\r\n                                        [stateId]: {\r\n\r\n                                        }\r\n                                    }\r\n                                }))\r\n                            }}\r\n\r\n                            style={{\r\n                                backgroundColor: globalStyles.red,\r\n                                color: globalStyles.white,\r\n                                width: \"100px\",\r\n                                height: \"40px\",\r\n                                position: \"relative\",\r\n                                flex: 1,\r\n                                maxWidth: \"100px\",\r\n                                borderColor: globalStyles.red,\r\n                                marginLeft: \"20px\"\r\n                            }}>\r\n                            <i class=\"fa fa-trash\"></i>\r\n                        </button>\r\n                    </span>\r\n                </div>\r\n                <div class=\"col-lg-7 col-12\" style={{\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    width: '100%'\r\n                }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"d-flex justify-content-center align-items-center col-md-12 col-lg-6\">\r\n                            <div class=\"form-check form-check-inline\"\r\n                                style={{\r\n                                    marginRight: \"30px\",\r\n                                    justifyContent: \"center\",\r\n                                    alignItems: \"center\",\r\n                                    padding: \"20px\"\r\n                                }}>\r\n                                <input class=\"form-check-input\"\r\n                                    type=\"radio\"\r\n                                    ref={(positive) => {\r\n                                        this._positiveInput = positive\r\n                                    }}\r\n                                    name={stateId}\r\n                                    defaultChecked={\r\n                                        this.state.functionality?.[stateId]?.checkbox\r\n                                            ? this.state.functionality?.[stateId]?.checkbox\r\n                                            : null\r\n                                    }\r\n                                    onChange={(e) => {\r\n                                        if (this.state.functionality[stateId]?.checkbox !== true) {\r\n                                            this.setState((state) => ({\r\n                                                functionality: {\r\n                                                    ...state?.functionality,\r\n                                                    [stateId]: {\r\n                                                        ...state?.functionality[stateId],\r\n                                                        checkbox: true\r\n                                                    }\r\n                                                }\r\n                                            }), callback);\r\n                                        }\r\n                                    }}\r\n                                    checked={\r\n                                        this.state.functionality[stateId]?.checkbox !== undefined\r\n                                        && this.state.functionality[stateId]?.checkbox !== null\r\n                                        && this.state.functionality[stateId]?.checkbox !== false\r\n                                    }\r\n                                />\r\n                                <label class=\"form-check-label\" style={{\r\n                                    fontWeight: \"bold\"\r\n                                }} for=\"flexCheckDefault\">\r\n                                    Olumlu\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check form-check-inline\" style={{\r\n                                marginRight: \"30px\"\r\n                            }}>\r\n                                <input class=\"form-check-input\"\r\n                                    type=\"radio\"\r\n                                    ref={(negative) => {\r\n                                        this._negativeInput = negative\r\n                                    }}\r\n                                    name={stateId}\r\n                                    defaultChecked={\r\n                                        this.state.functionality?.[stateId]?.checkbox === false\r\n                                            ? true\r\n                                            : null\r\n                                    }\r\n                                    onChange={(e) => {\r\n                                        if (this.state.functionality[stateId]?.checkbox !== false) {\r\n                                            this.setState((state) => ({\r\n                                                functionality: {\r\n                                                    ...state?.functionality,\r\n                                                    [stateId]: {\r\n                                                        ...state?.functionality[stateId],\r\n                                                        checkbox: false\r\n                                                    }\r\n                                                }\r\n                                            }), callback);\r\n                                        }\r\n                                    }}\r\n                                    checked={\r\n                                        this.state.functionality[stateId]?.checkbox !== undefined\r\n                                        && this.state.functionality[stateId]?.checkbox !== null\r\n                                        && this.state.functionality[stateId]?.checkbox !== true\r\n                                    }\r\n                                />\r\n                                <label class=\"form-check-label\" style={{\r\n                                    fontWeight: \"bold\"\r\n                                }} for=\"flexCheckDefault\">\r\n                                    Olumsuz\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check form-check-inline\" style={{\r\n                                marginRight: \"30px\"\r\n                            }}>\r\n                                <input class=\"form-check-input\"\r\n                                    type=\"radio\"\r\n                                    ref={(undef) => {\r\n                                        this._undefinedInput = undef\r\n                                    }}\r\n                                    name={stateId}\r\n                                    defaultChecked={\r\n                                        this.state.functionality?.[stateId]?.checkbox === null\r\n                                            ? null\r\n                                            : true\r\n                                    }\r\n                                    onChange={(e) => {\r\n                                        if (this.state.functionality[stateId]?.checkbox !== null) {\r\n                                            this.setState((state) => ({\r\n                                                functionality: {\r\n                                                    ...state?.functionality,\r\n                                                    [stateId]: {\r\n                                                        ...state?.functionality[stateId],\r\n                                                        checkbox: null\r\n                                                    }\r\n                                                }\r\n                                            }), callback);\r\n                                        }\r\n                                    }}\r\n                                    checked={\r\n                                        this.state.functionality[stateId]?.checkbox === null\r\n                                    }\r\n                                />\r\n                                <label class=\"form-check-label\" style={{\r\n                                    fontWeight: \"bold\"\r\n                                }} for=\"flexCheckDefault\">\r\n                                    Liste Dışı\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-12 col-lg-6\" style={{\r\n                            padding: \"30px 0px 30px 0px\",\r\n                        }}>\r\n                            <div class=\"form-check form-check-inline\" style={{\r\n                                display: \"flex\",\r\n                                marginRight: \"30px\",\r\n                                flexDirection: \"column\"\r\n                            }}>\r\n                                <label class=\"form-check-label\" style={{ textAlign: \"left\", fontWeight: \"bold\" }} for=\"flexCheckDefault\">\r\n                                    Notlar:\r\n                                </label>\r\n                                <textarea\r\n                                    onChange={(e) => {\r\n                                        this.setState((state) => ({\r\n                                            functionality: {\r\n                                                ...state?.functionality,\r\n                                                [stateId]: {\r\n                                                    ...state?.functionality[stateId],\r\n                                                    note: e.target.value\r\n                                                }\r\n                                            }\r\n                                        }), callback);\r\n                                    }}\r\n                                    rows=\"6\"\r\n                                    cols=\"55\"\r\n                                    style={{ marginLeft: \"25px\", minWidth: \"150px\", width: '100%' }}\r\n                                    placeholder=\"Notlarını buraya girebilirsin\"\r\n                                    value={this.state.functionality?.[stateId]?.note || \"\"}\r\n                                    defaultValue={\r\n                                        this.state.functionality?.[stateId]?.note || \"\"\r\n                                    }></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    /* FUNCTIONALITY ENDS */\r\n    /* LEGAL STATE STARTS */\r\n    renderLegalInformationCollector() {\r\n        return <div class=\"row\" style={{ padding: \"10px 20px 10px 20px\" }}>\r\n            <div class=\"col-12\">\r\n                <label for=\"state\"\r\n                    style={{\r\n                        fontFamily: \"'Rubik',sans-serif\",\r\n                        marginTop: \"30px\"\r\n                    }}>\r\n                    Edevlet Durumu:\r\n                </label>\r\n                <input\r\n                    defaultValue={this.state.legal?.state}\r\n                    ref={(state) => {\r\n                        this._legalState = state\r\n                    }}\r\n                    id=\"state\"\r\n                    type=\"text\"\r\n                    style={{\r\n                        width: '100%',\r\n                        height: \"45px\",\r\n                        padding: \"0px 10px 0px 10px\",\r\n                        fontWeight: \"bold\"\r\n                    }}\r\n                    onBlur={(e) => {\r\n                        this.saveLatestStateToLocalStorage()\r\n                    }}\r\n                    onChange={(e) => {\r\n                        this.setState(state => ({\r\n                            legal: {\r\n                                ...state?.legal,\r\n                                state: e.target.value\r\n                            }\r\n                        }), () => {\r\n                            console.log(this.state.legal)\r\n                        })\r\n                    }}\r\n                    name=\"state\"\r\n                    placeholder=\"Bu alana telefonun E-devletten sorgulanmış durumunu girebilirsin\"\r\n                />\r\n                <label for=\"source\"\r\n                    style={{\r\n                        fontFamily: \"'Rubik',sans-serif\",\r\n                        marginTop: \"30px\"\r\n                    }}>\r\n                    Edevlet Kaynak:\r\n                </label>\r\n                <input\r\n                    defaultValue={this.state.legal?.source}\r\n                    ref={(source) => {\r\n                        this._legalSource = source\r\n                    }}\r\n                    id=\"source\"\r\n                    type=\"text\"\r\n                    style={{\r\n                        width: '100%',\r\n                        height: \"45px\",\r\n                        padding: \"0px 10px 0px 10px\",\r\n                        fontWeight: \"bold\"\r\n                    }}\r\n                    onBlur={(e) => {\r\n                        this.saveLatestStateToLocalStorage()\r\n                    }}\r\n                    onChange={(e) => {\r\n                        this.setState(state => ({\r\n                            legal: {\r\n                                ...state?.legal,\r\n                                source: e.target.value\r\n                            }\r\n                        }), () => {\r\n                            console.log(this.state.legal)\r\n                        })\r\n                    }}\r\n                    name=\"source\"\r\n                    placeholder=\"Bu alana telefonun E-devletten sorgulanmış kaynak girebilirsin\"\r\n                />\r\n                <label for=\"date\"\r\n                    style={{\r\n                        fontFamily: \"'Rubik',sans-serif\",\r\n                        marginTop: \"30px\"\r\n                    }}>\r\n                    Edevlet Sorgu Tarihi:\r\n                </label>\r\n                <input\r\n                    defaultValue={this.state.legal?.date}\r\n                    ref={(date) => {\r\n                        this._legalDate = date\r\n                    }}\r\n                    id=\"date\"\r\n                    type=\"text\"\r\n                    style={{\r\n                        width: '100%',\r\n                        height: \"45px\",\r\n                        padding: \"0px 10px 0px 10px\",\r\n                        fontWeight: \"bold\"\r\n                    }}\r\n                    onBlur={(e) => {\r\n                        this.saveLatestStateToLocalStorage()\r\n                    }}\r\n                    onChange={(e) => {\r\n                        this.setState(state => ({\r\n                            legal: {\r\n                                ...state?.legal,\r\n                                date: e.target.value\r\n                            }\r\n                        }), () => {\r\n                            console.log(this.state.legal)\r\n                        })\r\n                    }}\r\n                    name=\"date\"\r\n                    placeholder=\"Bu alana telefonun E-devletten sorgulanma tarihini girebilirsin\"\r\n                />\r\n                <label for=\"brandModel\"\r\n                    style={{\r\n                        fontFamily: \"'Rubik',sans-serif\",\r\n                        marginTop: \"30px\"\r\n                    }}>\r\n                    Edevlet Marka / Model:\r\n                </label>\r\n                <input\r\n                    defaultValue={this.state.legal?.brandModel}\r\n                    ref={(information) => {\r\n                        this._legalInformation = information\r\n                    }}\r\n                    id=\"state\"\r\n                    type=\"text\"\r\n                    style={{\r\n                        width: '100%',\r\n                        height: \"45px\",\r\n                        padding: \"0px 10px 0px 10px\",\r\n                        fontWeight: \"bold\"\r\n                    }}\r\n                    onBlur={(e) => {\r\n                        this.saveLatestStateToLocalStorage()\r\n                    }}\r\n                    onChange={(e) => {\r\n                        this.setState(state => ({\r\n                            legal: {\r\n                                ...state?.legal,\r\n                                brandModel: e.target.value\r\n                            }\r\n                        }), () => {\r\n                            console.log(this.state.legal)\r\n                        })\r\n                    }}\r\n                    name=\"brandModel\"\r\n                    placeholder=\"Bu alana telefonun E-devletten sorgulanmış marka/model girebilirsin\"\r\n                />\r\n            </div>\r\n        </div>\r\n    }\r\n    /* LEGAL STATE ENDS */\r\n    /* REPORT CREATOR BUTTON */\r\n    createReport() {\r\n        const functionlityObj = {};\r\n        this.functionalityFormData.forEach((i, c) => {\r\n            functionlityObj[i?.stateId] = {\r\n                checkbox: null,\r\n                note: null\r\n            }\r\n        })\r\n        const data = {\r\n            general: this.state.general,\r\n            legality: this.state.legal,\r\n            cosmeticsAll: {\r\n                cosmetics: this.state.cosmetics,\r\n                cosmeticsNotes: this.state.cosmeticsNotes\r\n            },\r\n            functionality: {\r\n                ...functionlityObj,\r\n                ...this.state.functionality\r\n            }\r\n        }\r\n        console.log(data)\r\n\r\n        //console.log(data);\r\n        return request.post(\"/reports\", data).then(res => {\r\n            return res.data\r\n        }).then((res) => {\r\n            console.log(res);\r\n            this.setState({\r\n                completed: true,\r\n                _id: res?._id,\r\n            }, () => {\r\n                this.saveLatestStateToLocalStorage()\r\n                window.location.href = `view/${res?._id}`\r\n            })\r\n        }).catch(e => {\r\n            console.error(e)\r\n        })\r\n    }\r\n    renderCreateReport() {\r\n        return (\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                onClick={this.createReport.bind(this)}\r\n                style={{\r\n                    backgroundColor: globalStyles.bartyDark,\r\n                    margin: \"40px 0px\",\r\n                    width: \"100%\",\r\n                    height: \"90px\",\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"22px\",\r\n                    fontFamily: \"inherit\"\r\n                }}>\r\n                Raporu Oluştur\r\n            </button>\r\n        )\r\n    }\r\n    /* REPORT CREATOR BUTTON ENDS */\r\n    render() {\r\n        return (\r\n            <div class=\"container-fluid\" style={{\r\n                minHeight: \"100vh\",\r\n                background: globalStyles.white\r\n            }}>\r\n                <style>{`\r\n                .button-picker:hover{\r\n                background-color: lightgrey !important;\r\n                }`}\r\n                </style>\r\n                {this.renderHeader()}\r\n                <div style={{ padding: \"20px\" }}>\r\n                    {\r\n                        this.renderSmallHeader(\r\n                            \"1) Genel Bilgiler:\",\r\n                            () => {\r\n                                this.setState({\r\n                                    general: this.stateInitial?.general\r\n                                }, () => {\r\n                                    this._generalBrand.value = \"\"\r\n                                    this._generalModel.value = \"\"\r\n                                    this._generalGuarantee.value = \"\"\r\n                                    this._email.value = \"\"\r\n                                    this._telephone.value = \"\"\r\n                                    this.saveLatestStateToLocalStorage()\r\n                                })\r\n                            })\r\n                    }\r\n                    {this.renderGeneralInformationCollector()}\r\n                </div>\r\n                <div style={{ padding: \"20px\" }}>\r\n                    {\r\n                        this.renderSmallHeader(\r\n                            \"2) Legal Bilgiler:\",\r\n                            () => {\r\n                                this.setState({\r\n                                    legal: this.stateInitial?.legal\r\n                                }, () => {\r\n                                    this._legalState.value = \"\"\r\n                                    this._legalSource.value = \"\"\r\n                                    this._legalDate.value = \"\"\r\n                                    this._legalInformation.value = \"\"\r\n                                    this.saveLatestStateToLocalStorage()\r\n                                })\r\n                            })\r\n                    }\r\n                    {this.renderLegalInformationCollector()}\r\n                </div>\r\n                <div style={{ padding: \"20px\" }}>\r\n                    {\r\n                        this.renderSmallHeader(\r\n                            \"3) Kozmetik:\",\r\n                            () => {\r\n                                this.setState({\r\n                                    cosmetics: this.stateInitial?.cosmetics,\r\n                                    cosmeticsNotes: this.stateInitial?.cosmeticsNotes\r\n                                }, this.saveLatestStateToLocalStorage)\r\n                            })\r\n                    }\r\n                    {this.renderPalette()}\r\n                    {this.renderSmallHeader(`Kozmetik - Ön Yüz`, () => this.cleanCosmeticsTypeData(\"front\"))}\r\n                    {this.renderFrontCoordinatePicker()}\r\n                    {this.renderSmallHeader(`Kozmetik - Arka Yüz`, () => this.cleanCosmeticsTypeData(\"back\"))}\r\n                    {this.renderBackCoordinatePicker()}\r\n                    {this.renderSmallHeader(`Kozmetik - Üst Taraf`, () => this.cleanCosmeticsTypeData(\"top\"))}\r\n                    {this.renderTopCoordinatePicker()}\r\n                    {this.renderSmallHeader(`Kozmetik - Alt Taraf`, () => this.cleanCosmeticsTypeData(\"bottom\"))}\r\n                    {this.renderBottomCoordinatePicker()}\r\n                    {this.renderSmallHeader(`Kozmetik - Sol Taraf`, () => this.cleanCosmeticsTypeData(\"left\"))}\r\n                    {this.renderLeftCoordinatePicker()}\r\n                    {this.renderSmallHeader(`Kozmetik - Sağ Taraf`, () => this.cleanCosmeticsTypeData(\"right\"))}\r\n                    {this.renderRightCoordinatePicker()}\r\n                </div>\r\n                <div style={{}}>\r\n                    {this.renderSmallHeader(\"4) Fonksiyonilite\", () => this.setState({\r\n                        functionality: this.stateInitial?.functionality\r\n                    }, this.saveLatestStateToLocalStorage))}\r\n                    {this.functionalityFormData.map((data, index) => {\r\n                        return this.renderFunctionalitySelectBoxRow({\r\n                            ...data,\r\n                            index\r\n                        },\r\n                            () => {\r\n                                console.log(this.state.functionality)\r\n                                this.saveLatestStateToLocalStorage()\r\n                            }\r\n                        )\r\n                    })}\r\n                </div>\r\n                {this.renderCreateReport()}\r\n\r\n                {this.renderOneCellModal()}\r\n                {this.renderMultipleCellModal()}\r\n                {this.renderCleanActionButton()}\r\n                {this.renderModalImageButton()}\r\n                {this.renderModalImage()}\r\n                {this.renderUpdateCellsModal()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ReporterScreen);","import { useState } from 'react'\r\nimport aws from \"../../utils/aws\";\r\n\r\nfunction TestAmplifyScreen() {\r\n    const [file, setFile] = useState();\r\n    const [uploaded, setUploaded] = useState(false);\r\n    const [uploadedPhoto, setUploadedPhoto] = useState({ key: \"\" });\r\n    return (\r\n        <div className=\"App\">\r\n            <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\r\n            <button onClick={async () => {\r\n                //const fileResult = await aws.s3.uploadFile(file);\r\n                aws.s3.uploadFile(file).then(fileResult => {\r\n                    setUploadedPhoto(fileResult)\r\n                    setUploaded(true)\r\n                    console.log(fileResult)\r\n                }).catch(err => {\r\n                    console.error(err)\r\n                })\r\n                /* uploadFile(file, (result) => {\r\n                    setUploadedPhoto(result)\r\n                    setUploaded(true)\r\n                    console.log(result);\r\n                }) */\r\n                // Insert predictions code here later\r\n\r\n            }}>Upload and check if there's a dog!</button>\r\n\r\n            <div>\r\n                {uploaded\r\n                    ? <div>Your image is uploaded!: <a href={`https://report.xprcsv.net/public/${uploadedPhoto?.key}`}>{`https://report.xprcsv.net/public/${uploadedPhoto?.key}`}</a></div>\r\n                    : <div>Upload a photo to get started</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TestAmplifyScreen;","export default __webpack_public_path__ + \"static/media/cross-with-border.75c387e0.svg\";","export default __webpack_public_path__ + \"static/media/tick-with-border.3060547d.svg\";","export default __webpack_public_path__ + \"static/media/border.10d6c0b6.svg\";","export default __webpack_public_path__ + \"static/media/logo1.09df9027.svg\";","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport moment from 'moment';\r\nimport request from '../../request';\r\nimport CrossWithBorder from '../../assets/svg/cross-with-border.svg';\r\nimport TickWithBorder from '../../assets/svg/tick-with-border.svg';\r\nimport BorderSvg from '../../assets/svg/border.svg';\r\nimport Logo from '../../assets/svg/logo1.svg';\r\n\r\n\r\nclass ShowReportScreen extends Component {\r\n    state = {\r\n        report: {},\r\n        loaded: false\r\n    }\r\n    titles = {\r\n        _screenShadow: \"Ekranda gölgelenme\",\r\n        _touchScreen: \"Dokunmatik Ekran\",\r\n        _frontCameraSound: \"Ön Kamera ve Mikrofonu\",\r\n        _backCameraSound: \"Arka Kamera ve Mikrofonu\",\r\n        _flashLight: \"Flash Işığı\",\r\n        _cellularNetwork: \"Şebeke\",\r\n        _bluetooth: \"Bluetooth\",\r\n        _wifiConnection: \"Wi-Fi\",\r\n        _incomingNoise: \"Gelen Ses\",\r\n        _outgoingNoise: \"Giden Ses\",\r\n        _vibration: \"Titreşim\",\r\n        _charging: \"Şarj Soketi\",\r\n        _batteryCapacity: \"Pil Kapasitesi\",\r\n        _directionSensor: \"Yön Sensörü\",\r\n        _balanceSensor: \"Denge Sensörü\",\r\n        _distanceSensor: \"Mesafe Sensörü\",\r\n        _compassSensor: \"Pusula\",\r\n        _pressureSensor: \"Basınç Sensörü\",\r\n        _gpsSensor: \"GPS\",\r\n        _nfcSensor: \"NFC\",\r\n        _memory: \"Hafıza / Saklama Alanı\",\r\n        _ram: \"RAM\",\r\n        _processor: \"İşlemci\",\r\n        _remoteCharging: \"Kablosuz Şarj\",\r\n        _screws: \"Eksiksiz Vidalama\",\r\n        _sideKeysVolume: \"Yan Ses Tuşları\",\r\n        _sideKeysTurnOn: 'Yan \"Açma Kapama\" Tuşu',\r\n        _sideKeysMute: 'Yan \"Sessize Al\" Tuşu',\r\n        _homeKey: \"Ana Ekran (Home Tuşu)\",\r\n        _fingerPrint: \"Parmak İzi Özelliği\",\r\n        _faceId: \"FaceID / Yüz Tanıma\",\r\n        _iCloud: \"iCloud\",\r\n\r\n    }\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    componentDidMount() {\r\n        request.get(`/reports/${this.props.match.params.id}`).then((res) => {\r\n            this.setState({ report: res.data, loaded: true })\r\n        }).catch(e => {\r\n            console.error(e)\r\n            //alert(\"Rapor Bulunamadı\")\r\n        })\r\n    }\r\n    //HEADER STARTS\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"container header\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6 col-12\">\r\n                        <embed src={Logo} />\r\n                        <div className=\"dateTime\">\r\n                            <div className=\"date\">\r\n                                <span>Tarih:{\"  \"}</span>\r\n                                {\r\n                                    moment(this.state.report?.createdAt).format(\"LL\")\r\n                                }\r\n                            </div>\r\n                            <div className=\"hour\">\r\n                                <span>Saat:{\"  \"}</span>\r\n                                {\r\n                                    moment(this.state.report?.createdAt).format(\"LT\")\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6 col-12\">\r\n                        <div className=\"report-info\">\r\n                            <span>Müşteri Adı:</span>\r\n                            {\" Orkun Ç***** \"}\r\n                        </div>\r\n                        <div className=\"report-no\">\r\n                            <span>Rapor No:</span>\r\n                            {\" EC-002131234\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    //HEADER ENDS\r\n\r\n    //HEADER BOTTOM LAYER STARTS\r\n    renderHeaderBottomLayer() {\r\n        return (\r\n            <div class=\"header-bottom-layer\">\r\n                <div className=\"header-bottom-layer-flex-1 flex-vertical\">\r\n                    <div>\r\n                        <div className=\"report-title\">\r\n                            İşlevsellik Durumu\r\n                        </div>\r\n                        <div className=\"report-title-description\">\r\n                            Lorem Ipsum is simply dummy text of the printing and typesetting industry.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"header-bottom-layer-flex-1 flex-end\">\r\n                    <div className=\"report-analysis\">\r\n                        <span>25</span> Uygun / <span>9</span> Arızalı\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    //HEADER BOTTOM LAYER ENDS\r\n    //FUNCTIONALITY COMPONENT STARTS\r\n    renderPositiveBoxes() {\r\n        return (\r\n            <div className=\"boxes d-flex justify-content-center\">\r\n                <div className=\"d-flex box\">Uygun <img src={TickWithBorder} /></div>\r\n                <div className=\"d-flex box\">Arızalı <img src={BorderSvg} /></div>\r\n            </div>\r\n        )\r\n    }\r\n    renderNegativeBoxes() {\r\n        return (\r\n            <div className=\"boxes d-flex justify-content-center\">\r\n                <div className=\"d-flex box\">Uygun <img src={BorderSvg} /></div>\r\n                <div className=\"d-flex box\">Arızalı <img src={CrossWithBorder} /></div>\r\n            </div>\r\n        )\r\n    }\r\n    renderOneFunctionalityComponent(config = {\r\n        type: false,\r\n        note: \"Note yok\",\r\n        title: \"\"\r\n    }) {\r\n        return (\r\n            <div className=\"col-lg-6 col-12 func-all\">\r\n                <div className={`func ${config?.type === true ? \"positive\" : \"negative\"}`}>\r\n                    <div className=\"functionality-report-element-top\">\r\n                        <div className=\"flexed-top\">\r\n                            <div className=\"title\">\r\n                                <div className=\"titleText\">\r\n                                    {config?.title}\r\n                                </div>\r\n                            </div>\r\n                            {config?.type === true\r\n                                ? this.renderPositiveBoxes()\r\n                                : this.renderNegativeBoxes()}\r\n                        </div>\r\n                        <div className={`d-flex flex-row functionality-report-element-note`} style={{\r\n                            display: !config?.note ? \"none !important\" : \"block !important\"\r\n                        }}>\r\n                            <div className=\"note-title\">\r\n                                <div className=\"titleText\">\r\n                                    Not:\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"note\">\r\n                                <div className=\"noteText\">\r\n                                    {config?.note || \"Not bulunmamaktadır\"}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n    renderFunctionality() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row no-gutters\">\r\n                    {Object.keys(this.state.report.functionality).filter((key, index) => {\r\n                        const item = this.state.report.functionality?.[key];\r\n                        if (item?.checkbox === null) {\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    }).map((key, index) => {\r\n                        const item = this.state.report.functionality?.[key];\r\n                        return this.renderOneFunctionalityComponent({\r\n                            type: item?.checkbox,\r\n                            note: item?.note,\r\n                            title: this.titles[key]\r\n                        })\r\n                    })\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    //FUNCTIONALITY COMPONENT ENDS\r\n    /* <div style={{ width: \"100vw\", minHeight: \"100vh\", backgroundColor: \"white\" }}>\r\n                    {Object.keys(this.state.report).map((key, i) => {\r\n                        return <div>{`${key}: ${JSON.stringify(this.state.report[key])}`}</div>\r\n                    })}\r\n                </div> */\r\n    render() {\r\n        if (!this.state.loaded) return <div></div>\r\n        return (\r\n            <div class=\"container-fluid report-container\">\r\n                <div className=\"container web-report\">\r\n                    {this.renderHeader()}\r\n                    {this.renderHeaderBottomLayer()}\r\n                    {this.renderFunctionality()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ShowReportScreen);","import {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport ReportsScreen from \"../screens/ReportsScreen\";\r\nimport ReporterScreen from \"../screens/ReporterScreen\";\r\nimport TestAmplifyScreen from \"../screens/TestAmplifyScreen\";\r\nimport ShowReportScreen from \"../screens/ShowReportScreen\";\r\n\r\nfunction Navigation(props) {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    <TestAmplifyScreen />\r\n                </Route>\r\n                <Route path=\"/view/:id\" component={ShowReportScreen} />\r\n                <Route path=\"/report\" exact>\r\n                    <ReportsScreen />\r\n                </Route>\r\n                <Route path=\"/report/:id\" >\r\n                    <ReporterScreen />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\nfunction View(props) {\r\n    return (\r\n        <div>\r\n            <h3>IMAGE ID: {props.match.params.id}</h3>\r\n        </div>\r\n    )\r\n}\r\nfunction Main() {\r\n    return <div>Main</div>\r\n}\r\n\r\n\r\nexport default Navigation;","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"eu-central-1\",\n    \"aws_cognito_region\": \"eu-central-1\",\n    \"aws_user_pools_id\": \"eu-central-1_VLFxIGPDi\",\n    \"aws_user_pools_web_client_id\": \"4v65akd1h714q9pt1li7ru6fof\",\n    \"oauth\": {},\n    \"aws_user_files_s3_bucket\": \"report.xprcsv.net\",\n    \"aws_user_files_s3_bucket_region\": \"eu-central-1\",\n    \"aws_cognito_identity_pool_id\": \"eu-central-1:1ae3dc98-ae6f-4fc1-a7af-bd72a2cfe38f\"\n};\n\n\nexport default awsmobile;\n","import React from \"react\";\nimport Navigation from \"./navigation\";\nimport moment from \"moment\";\nimport trLocale from \"moment/locale/tr\";\nimport Amplify from 'aws-amplify';\nimport amplifyConfig from './aws-exports';\nimport \"./scss/index.scss\";\nAmplify.configure(amplifyConfig);\n\n\nexport default function App() {\n  moment.locale('tr', [trLocale])\n  return (\n    <Navigation />\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nwindow.LOG_LEVEL = 'DEBUG'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}